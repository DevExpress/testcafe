// -------------------------------------------------------------
// WARNING: this file is used by both the client and the server.
// Do not use any browser or node-specific API!
// -------------------------------------------------------------

export const TEST_RUN_ERRORS = {
    uncaughtErrorOnPage:                               { name: 'uncaughtErrorOnPage', code: 'E1' },
    uncaughtErrorInTestCode:                           { name: 'uncaughtErrorInTestCode', code: 'E2' },
    uncaughtNonErrorObjectInTestCode:                  { name: 'uncaughtNonErrorObjectInTestCode', code: 'E3' },
    uncaughtErrorInClientFunctionCode:                 { name: 'uncaughtErrorInClientFunctionCode', code: 'E4' },
    uncaughtErrorInCustomDOMPropertyCode:              { name: 'uncaughtErrorInCustomDOMPropertyCode', code: 'E5' },
    unhandledPromiseRejection:                         { name: 'unhandledPromiseRejection', code: 'E6' },
    uncaughtException:                                 { name: 'uncaughtException', code: 'E7' },
    missingAwaitError:                                 { name: 'missingAwaitError', code: 'E8' },
    actionIntegerOptionError:                          { name: 'actionIntegerOptionError', code: 'E9' },
    actionPositiveIntegerOptionError:                  { name: 'actionPositiveIntegerOptionError', code: 'E10' },
    actionBooleanOptionError:                          { name: 'actionBooleanOptionError', code: 'E11' },
    actionSpeedOptionError:                            { name: 'actionSpeedOptionError', code: 'E12' },
    actionOptionsTypeError:                            { name: 'actionOptionsTypeError', code: 'E14' },
    actionBooleanArgumentError:                        { name: 'actionBooleanArgumentError', code: 'E15' },
    actionStringArgumentError:                         { name: 'actionStringArgumentError', code: 'E16' },
    actionNullableStringArgumentError:                 { name: 'actionNullableStringArgumentError', code: 'E17' },
    actionStringOrStringArrayArgumentError:            { name: 'actionStringOrStringArrayArgumentError', code: 'E18' },
    actionStringArrayElementError:                     { name: 'actionStringArrayElementError', code: 'E19' },
    actionIntegerArgumentError:                        { name: 'actionIntegerArgumentError', code: 'E20' },
    actionRoleArgumentError:                           { name: 'actionRoleArgumentError', code: 'E21' },
    actionPositiveIntegerArgumentError:                { name: 'actionPositiveIntegerArgumentError', code: 'E22' },
    actionSelectorError:                               { name: 'actionSelectorError', code: 'E23' },
    actionElementNotFoundError:                        { name: 'actionElementNotFoundError', code: 'E24' },
    actionElementIsInvisibleError:                     { name: 'actionElementIsInvisibleError', code: 'E26' },
    actionSelectorMatchesWrongNodeTypeError:           { name: 'actionSelectorMatchesWrongNodeTypeError', code: 'E27' },
    actionAdditionalElementNotFoundError:              { name: 'actionAdditionalElementNotFoundError', code: 'E28' },
    actionAdditionalElementIsInvisibleError:           { name: 'actionAdditionalElementIsInvisibleError', code: 'E29' },
    actionAdditionalSelectorMatchesWrongNodeTypeError: { name: 'actionAdditionalSelectorMatchesWrongNodeTypeError', code: 'E30' },
    actionElementNonEditableError:                     { name: 'actionElementNonEditableError', code: 'E31' },
    actionElementNotTextAreaError:                     { name: 'actionElementNotTextAreaError', code: 'E32' },
    actionElementNonContentEditableError:              { name: 'actionElementNonContentEditableError', code: 'E33' },
    actionElementIsNotFileInputError:                  { name: 'actionElementIsNotFileInputError', code: 'E34' },
    actionRootContainerNotFoundError:                  { name: 'actionRootContainerNotFoundError', code: 'E35' },
    actionIncorrectKeysError:                          { name: 'actionIncorrectKeysError', code: 'E36' },
    actionCanNotFindFileToUploadError:                 { name: 'actionCanNotFindFileToUploadError', code: 'E37' },
    actionUnsupportedDeviceTypeError:                  { name: 'actionUnsupportedDeviceTypeError', code: 'E38' },
    actionIframeIsNotLoadedError:                      { name: 'actionIframeIsNotLoadedError', code: 'E39' },
    actionElementNotIframeError:                       { name: 'actionElementNotIframeError', code: 'E40' },
    actionInvalidScrollTargetError:                    { name: 'actionInvalidScrollTargetError', code: 'E41' },
    currentIframeIsNotLoadedError:                     { name: 'currentIframeIsNotLoadedError', code: 'E42' },
    currentIframeNotFoundError:                        { name: 'currentIframeNotFoundError', code: 'E43' },
    currentIframeIsInvisibleError:                     { name: 'currentIframeIsInvisibleError', code: 'E44' },
    nativeDialogNotHandledError:                       { name: 'nativeDialogNotHandledError', code: 'E45' },
    uncaughtErrorInNativeDialogHandler:                { name: 'uncaughtErrorInNativeDialogHandler', code: 'E46' },
    setTestSpeedArgumentError:                         { name: 'setTestSpeedArgumentError', code: 'E47' },
    setNativeDialogHandlerCodeWrongTypeError:          { name: 'setNativeDialogHandlerCodeWrongTypeError', code: 'E48' },
    clientFunctionExecutionInterruptionError:          { name: 'clientFunctionExecutionInterruptionError', code: 'E49' },
    domNodeClientFunctionResultError:                  { name: 'domNodeClientFunctionResultError', code: 'E50' },
    invalidSelectorResultError:                        { name: 'invalidSelectorResultError', code: 'E51' },
    cantObtainInfoForElementSpecifiedBySelectorError:  { name: 'cantObtainInfoForElementSpecifiedBySelectorError', code: 'E52' },
    externalAssertionLibraryError:                     { name: 'externalAssertionLibraryError', code: 'E53' },
    pageLoadError:                                     { name: 'pageLoadError', code: 'E54' },
    windowDimensionsOverflowError:                     { name: 'windowDimensionsOverflowError', code: 'E55' },
    forbiddenCharactersInScreenshotPathError:          { name: 'forbiddenCharactersInScreenshotPathError', code: 'E56' },
    invalidElementScreenshotDimensionsError:           { name: 'invalidElementScreenshotDimensionsError', code: 'E57' },
    roleSwitchInRoleInitializerError:                  { name: 'roleSwitchInRoleInitializerError', code: 'E58' },
    assertionExecutableArgumentError:                  { name: 'assertionExecutableArgumentError', code: 'E59' },
    assertionWithoutMethodCallError:                   { name: 'assertionWithoutMethodCallError', code: 'E60' },
    assertionUnawaitedPromiseError:                    { name: 'assertionUnawaitedPromiseError', code: 'E61' }
};

export const RUNTIME_ERRORS = {
    cannotCreateMultipleLiveModeRunners:                            { name: 'cannotCreateMultipleLiveModeRunners', code: 'E1000' },
    cannotRunLiveModeRunnerMultipleTimes:                           { name: 'cannotRunLiveModeRunnerMultipleTimes', code: 'E1001' },
    browserDisconnected:                                            { name: 'browserDisconnected', code: 'E1002' },
    cantRunAgainstDisconnectedBrowsers:                             { name: 'cantRunAgainstDisconnectedBrowsers', code: 'E1003' },
    cantEstablishBrowserConnection:                                 { name: 'cantEstablishBrowserConnection', code: 'E1004' },
    cantFindBrowser:                                                { name: 'cantFindBrowser', code: 'E1005' },
    browserProviderNotFound:                                        { name: 'browserProviderNotFound', code: 'E1006' },
    browserNotSet:                                                  { name: 'browserNotSet', code: 'E1007' },
    testSourcesNotSet:                                              { name: 'testSourcesNotSet', code: 'E1008' },
    noTestsToRun:                                                   { name: 'noTestsToRun', code: 'E1009' },
    cantFindReporterForAlias:                                       { name: 'cantFindReporterForAlias', code: 'E1010' },
    multipleStdoutReporters:                                        { name: 'multipleStdoutReporters', code: 'E1011' },
    optionValueIsNotValidRegExp:                                    { name: 'optionValueIsNotValidRegExp', code: 'E1012' },
    optionValueIsNotValidKeyValue:                                  { name: 'optionValueIsNotValidKeyValue', code: 'E1013' },
    invalidSpeedValue:                                              { name: 'invalidSpeedValue', code: 'E1014' },
    invalidConcurrencyFactor:                                       { name: 'invalidConcurrencyFactor', code: 'E1015' },
    cannotDivideRemotesCountByConcurrency:                          { name: 'cannotDivideRemotesCountByConcurrency', code: 'E1016' },
    portsOptionRequiresTwoNumbers:                                  { name: 'portsOptionRequiresTwoNumbers', code: 'E1017' },
    portIsNotFree:                                                  { name: 'portIsNotFree', code: 'E1018' },
    invalidHostname:                                                { name: 'invalidHostname', code: 'E1019' },
    cantFindSpecifiedTestSource:                                    { name: 'cantFindSpecifiedTestSource', code: 'E1020' },
    clientFunctionCodeIsNotAFunction:                               { name: 'clientFunctionCodeIsNotAFunction', code: 'E1021' },
    selectorInitializedWithWrongType:                               { name: 'selectorInitializedWithWrongType', code: 'E1022' },
    clientFunctionCantResolveTestRun:                               { name: 'clientFunctionCantResolveTestRun', code: 'E1023' },
    regeneratorInClientFunctionCode:                                { name: 'regeneratorInClientFunctionCode', code: 'E1024' },
    invalidClientFunctionTestRunBinding:                            { name: 'invalidClientFunctionTestRunBinding', code: 'E1025' },
    invalidValueType:                                               { name: 'invalidValueType', code: 'E1026' },
    unsupportedUrlProtocol:                                         { name: 'unsupportedUrlProtocol', code: 'E1027' },
    testControllerProxyCantResolveTestRun:                          { name: 'testControllerProxyCantResolveTestRun', code: 'E1028' },
    timeLimitedPromiseTimeoutExpired:                               { name: 'timeLimitedPromiseTimeoutExpired', code: 'E1029' },
    cantUseScreenshotPathPatternWithoutBaseScreenshotPathSpecified: { name: 'cantUseScreenshotPathPatternWithoutBaseScreenshotPathSpecified', code: 'E1030' },
    cannotSetVideoOptionsWithoutBaseVideoPathSpecified:             { name: 'cannotSetVideoOptionsWithoutBaseVideoPathSpecified', code: 'E1031' },
    multipleAPIMethodCallForbidden:                                 { name: 'multipleAPIMethodCallForbidden', code: 'E1032' },
    invalidReporterOutput:                                          { name: 'invalidReporterOutput', code: 'E1033' },
    cannotReadSSLCertFile:                                          { name: 'cannotReadSSLCertFile', code: 'E1034' },
    cannotPrepareTestsDueToError:                                   { name: 'cannotPrepareTestsDueToError', code: 'E1035' },
    cannotParseRawFile:                                             { name: 'cannotParseRawFile', code: 'E1036' },
    testedAppFailedWithError:                                       { name: 'testedAppFailedWithError', code: 'E1037' },
    unableToOpenBrowser:                                            { name: 'unableToOpenBrowser', code: 'E1038' },
    requestHookConfigureAPIError:                                   { name: 'requestHookConfigureAPIError', code: 'E1039' },
    forbiddenCharatersInScreenshotPath:                             { name: 'forbiddenCharatersInScreenshotPath', code: 'E1040' },
    cannotFindFFMPEG:                                               { name: 'cannotFindFFMPEG', code: 'E1041' }
};
