name: Deploy To Artifacts

on:
  workflow_dispatch:
    inputs:
      sha:
        description: 'The commit ref or SHA'
        required: true
        default: 'master'
      merged_sha:
        description: 'The merge commit SHA'
      base_sha:
        description: 'The base commit SHA'

jobs:
  test:
    runs-on: ubuntu-latest
    environment: CI
    steps:
      - uses: actions/github-script@v3
        with:
          github-token: ${{secrets.ACTIVE_TOKEN}}
          script: |
            function getInputs () {
              const { sha, merged_sha } = context.payload.inputs;

              return {
                ...merged_sha ? { merged_sha } : {},
                sha,
                deploy_run_id: '${{github.run_id}}'
              }
            }

            async function dispatchWorkflow (workflowName) {
              await github.actions.createWorkflowDispatch({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: 'master',
                workflow_id: workflowName,
                inputs: getInputs()
              });
            }

            // TODO: Optimize by running only necessary tests for corresponding changes
            const fileList = require('fs').readFileSync('changes.txt').toString().split('\n').filter(line => line);

            const tasks = [];
                    
            tasks.push('test-sequences.yml');

#            tasks.push('test-client-desktop.yml');
#            tasks.push('test-client-mobile.yml');
#
#            tasks.push('test-functional-docker.yml');
#            tasks.push('test-functional-local-chrome.yml');
#            tasks.push('test-functional-local-esm.yml');
#            tasks.push('test-functional-local-debug-1.yml');
#            tasks.push('test-functional-local-debug-2.yml');
#            tasks.push('test-functional-local-firefox.yml');
#            tasks.push('test-functional-local-ie.yml');
#            tasks.push('test-functional-local-multiple-windows.yml');
#            tasks.push('test-functional-local-proxyless.yml');
#
#            tasks.push('test-functional-local-legacy.yml');
#
#            tasks.push('test-functional-local-safari.yml');
#
#            tasks.push('test-functional-remote-macos.yml');
#            tasks.push('test-functional-remote-mobile.yml');
#
#            tasks.push('test-server-docker.yml');
#            tasks.push('test-server-lts.yml');
#            tasks.push('test-server-stable.yml');

            // Temporary disable
            // tasks.push('test-cdp.yml');

            await Promise.all(tasks.map(task => dispatchWorkflow(task)));
