{"version":3,"sources":["session.js"],"names":[],"mappings":"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","file":"session.js","sourcesContent":["import path from 'path';\r\nimport fs from 'fs';\r\nimport { EventEmitter } from 'events';\r\nimport Mustache from 'mustache';\r\nimport SERVICE_CMD from '../shared/service_msg_cmd';\r\nimport Cookies from './cookies';\r\nimport read from './utils/read-file-relative';\r\nimport { parseProxyUrlWrap } from '../shared/url_util';\r\n\r\n\r\n// Const\r\nconst TASK_TEMPLATE = read('../../_compiled_/hammerhead_client/task.js.mustache');\r\n\r\n\r\n// Global instance counter used to generate ID's\r\nvar instanceCount = 0;\r\n\r\n\r\n// Session\r\nexport default class Session extends EventEmitter {\r\n    constructor () {\r\n        super();\r\n\r\n        this.id         = ++instanceCount;\r\n        this.cookies    = new Cookies();\r\n        this.proxy      = null;\r\n        this.injectable = {\r\n            scripts: ['/hammerhead.js'],\r\n            styles:  []\r\n        };\r\n    }\r\n\r\n    async handleServiceMessage (msg, serverInfo) {\r\n        if (this[msg.cmd])\r\n            return await this[msg.cmd](msg, serverInfo);\r\n\r\n        else\r\n            throw new Error('Malformed service message or message handler is not implemented');\r\n    }\r\n\r\n    getTaskScript (referer, cookieUrl, serverInfo, isIFrame, withPayload) {\r\n        var cookies       = this.cookies.getClientString(cookieUrl);\r\n        var payloadScript = '';\r\n\r\n        if (withPayload)\r\n            payloadScript = isIFrame ? this._getIFramePayloadScript() : this._getPayloadScript();\r\n\r\n        return Mustache.render(TASK_TEMPLATE, {\r\n            cookie:               cookies.replace(/'/g, \"\\\\'\"),\r\n            jobUid:               this.id,\r\n            jobOwnerToken:        '',\r\n            serviceMsgUrl:        serverInfo.domain + '/messaging',\r\n            ie9FileReaderShimUrl: serverInfo.domain + '/ie9-file-reader-shim',\r\n            crossDomainPort:      serverInfo.crossDomainPort,\r\n            payloadScript:        payloadScript,\r\n            referer:              referer\r\n        });\r\n    }\r\n\r\n    _getIFramePayloadScript () {\r\n        throw new Error('Not implemented');\r\n    }\r\n\r\n    _getPayloadScript () {\r\n        throw new Error('Not implemented');\r\n    }\r\n\r\n    async _storeUploads (fileNames, data) {\r\n        throw new Error('Not implemented');\r\n    }\r\n\r\n    async _getUploads (paths) {\r\n        throw new Error('Not implemented');\r\n    }\r\n\r\n    handleFileDownload (ctx) {\r\n        throw new Error('Not implemented');\r\n    }\r\n\r\n    handlePageError (ctx, err) {\r\n        throw new Error('Not implemented');\r\n    }\r\n\r\n    getAuthCredentials () {\r\n        throw new Error('Not implemented');\r\n    }\r\n}\r\n\r\n\r\n// Service message handlers\r\nvar ServiceMessages = Session.prototype;\r\n\r\nServiceMessages[SERVICE_CMD.SET_COOKIE] = function (msg) {\r\n    var parsedUrl = parseProxyUrlWrap(msg.url);\r\n    var cookieUrl = parsedUrl ? parsedUrl.originUrl : msg.url;\r\n\r\n    this.cookies.setByClient(cookieUrl, msg.cookie);\r\n\r\n    return this.cookies.getClientString(cookieUrl);\r\n};\r\n\r\nServiceMessages[SERVICE_CMD.GET_IFRAME_TASK_SCRIPT] = function (msg, serverInfo) {\r\n    var referer     = msg.referer || '';\r\n    var refererDest = referer && parseProxyUrlWrap(referer);\r\n    var cookieUrl   = refererDest && refererDest.originUrl;\r\n\r\n    return this.getTaskScript(referer, cookieUrl, serverInfo, true, false);\r\n};\r\n\r\nServiceMessages[SERVICE_CMD.UPLOAD_FILES] = async function (msg) {\r\n    return await this._storeUploads(msg.fileNames, msg.data);\r\n};\r\n\r\nServiceMessages[SERVICE_CMD.GET_UPLOADED_FILES] = async function (msg) {\r\n    return await this._loadUploads(msg.filePaths);\r\n};\r\n\r\n\r\n"],"sourceRoot":"../src"}