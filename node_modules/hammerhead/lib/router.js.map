{"version":3,"sources":["router.js"],"names":[],"mappings":"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","file":"router.js","sourcesContent":["import { getPathname } from '../shared/url_util';\r\nimport hash from './utils/hash';\r\nimport { respondStatic } from './utils/http';\r\n\r\n\r\n// Const\r\nconst PARAM_RE = /^{(\\S+)}$/;\r\n\r\n\r\n// Static\r\nfunction buildRouteParamsMap (routeMatch, paramNames) {\r\n    return paramNames.reduce((params, paramName, i) => {\r\n        params[paramName] = routeMatch[i + 1];\r\n        return params;\r\n    }, {});\r\n\r\n}\r\n\r\n\r\n// Router\r\nexport default class Router {\r\n    constructor () {\r\n        this.routes           = {};\r\n        this.routesWithParams = [];\r\n    }\r\n\r\n    _registerRoute (route, method, handler) {\r\n        var tokens            = route.split('/');\r\n        var isRouteWithParams = tokens.some((token) => PARAM_RE.test(token));\r\n\r\n        if (isRouteWithParams)\r\n            this._registerRouteWithParams(tokens, method, handler);\r\n\r\n        else {\r\n            var isStatic = typeof handler !== 'function';\r\n\r\n            if (isStatic)\r\n                handler.etag = hash(handler.content);\r\n\r\n            this.routes[`${method} ${route}`] = {\r\n                handler:  handler,\r\n                isStatic: isStatic\r\n            };\r\n        }\r\n    }\r\n\r\n    _registerRouteWithParams (tokens, method, handler) {\r\n        var paramNames = [];\r\n\r\n        var reParts = tokens.map((token) => {\r\n            var paramMatch = token.match(PARAM_RE);\r\n\r\n            if (paramMatch) {\r\n                paramNames.push(paramMatch[1]);\r\n                return '(\\\\S+?)';\r\n            }\r\n\r\n            return token;\r\n        });\r\n        this.routesWithParams.push({\r\n            paramNames: paramNames,\r\n\r\n            re:      new RegExp(`^${method} ${reParts.join('/')}$`),\r\n            handler: handler\r\n        });\r\n    }\r\n\r\n    _route (req, res, serverInfo) {\r\n        var routerQuery = `${req.method} ${getPathname(req.url)}`;\r\n        var route       = this.routes[routerQuery];\r\n\r\n        if (route) {\r\n            if (route.isStatic)\r\n                respondStatic(req, res, route.handler);\r\n\r\n            else\r\n                route.handler(req, res, serverInfo);\r\n\r\n            return true;\r\n        }\r\n\r\n\r\n        for (var i = 0; i < this.routesWithParams.length; i++) {\r\n            route = this.routesWithParams[i];\r\n\r\n            var routeMatch = routerQuery.match(route.re);\r\n\r\n            if (routeMatch) {\r\n                var params = buildRouteParamsMap(routeMatch, route.paramNames);\r\n\r\n                route.handler(req, res, serverInfo, params);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    // API\r\n    GET (route, handler) {\r\n        this._registerRoute(route, 'GET', handler);\r\n    }\r\n\r\n    POST (route, handler) {\r\n        this._registerRoute(route, 'POST', handler);\r\n    }\r\n}"],"sourceRoot":"../src"}