{"version":3,"sources":["pipeline/destination-request.js"],"names":[],"mappings":"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","file":"pipeline/destination-request.js","sourcesContent":["import domain from 'domain';\r\nimport http from 'http';\r\nimport https from 'https';\r\nimport { platform } from 'os';\r\nimport { EventEmitter } from 'events';\r\nimport { auth as requestWithAuth } from 'webauth';\r\nimport { assign as assignWindowsDomain } from './windows-domain';\r\nimport { handle as handleConnectionReset } from './connection-reset';\r\nimport * as requestAgent from './request-agent';\r\nimport * as ERR from '../errs';\r\n\r\nconst IS_WINDOWS = /^win/.test(platform());\r\n\r\n// HACK: Ignore SSL auth. rejectUnauthorized https.request\r\n// option doesn't work(see:  https://github.com/mikeal/request/issues/418)\r\nprocess.env.NODE_TLS_REJECT_UNAUTHORIZED = '0';\r\n\r\n// Utils\r\nfunction isDNSErr (err) {\r\n    return err.message && err.message.indexOf('ENOTFOUND') > -1;\r\n}\r\n\r\n// DestinationRequest\r\nexport default class DestinationRequest extends EventEmitter {\r\n    static TIMEOUT = 25 * 1000;\r\n\r\n    constructor (opts) {\r\n        super();\r\n\r\n        this.req               = null;\r\n        this.hasResponse       = false;\r\n        this.opts              = opts;\r\n        this.isHttps           = opts.protocol === 'https:';\r\n        this.protocolInterface = this.isHttps ? https : http;\r\n\r\n        // NOTE: ignore SSL auth\r\n        if (this.isHttps)\r\n            opts.rejectUnauthorized = false;\r\n\r\n        requestAgent.assign(this.opts);\r\n        this._send();\r\n    }\r\n\r\n    _send () {\r\n        handleConnectionReset(() => {\r\n            this.req = this.protocolInterface.request(this.opts);\r\n\r\n            this.req.on('response', (res) => this._onResponse(res));\r\n            this.req.on('error', (err) => this._onError(err));\r\n            this.req.setTimeout(DestinationRequest.TIMEOUT, () => this._onTimeout());\r\n\r\n            this.req.write(this.opts.body);\r\n            this.req.end();\r\n        });\r\n    }\r\n\r\n    _onResponse (res) {\r\n        this.hasResponse = true;\r\n\r\n        if (res.statusCode === 401)\r\n            this._sendWithCredentials(res);\r\n\r\n        else\r\n            this.emit('response', res);\r\n    }\r\n\r\n    async _sendWithCredentials (res) {\r\n        if (this.opts.credentials) {\r\n            if (IS_WINDOWS)\r\n                await assignWindowsDomain(this.opts.credentials);\r\n\r\n            //TODO !!!\r\n            requestWithAuth(this.opts, this.opts.credentials, [this.opts.body], (res) => {\r\n                this.emit('response', res);\r\n            }, this.isHttps, res);\r\n        }\r\n    }\r\n\r\n    _onTimeout () {\r\n        // NOTE: this handler is called if we get error\r\n        // response(for example, 404). So, we should check\r\n        // for the response presence before raising error.\r\n        if (!this.hasResponse) {\r\n            this.req.abort();\r\n\r\n            this.emit('fatalError', {\r\n                code:    ERR.PROXY_ORIGIN_SERVER_REQUEST_TIMEOUT,\r\n                destUrl: this.opts.url\r\n            });\r\n        }\r\n    }\r\n\r\n    _onError (err) {\r\n        if (requestAgent.shouldRegressHttps(err, this.opts)) {\r\n            requestAgent.regressHttps(this.opts);\r\n            this._send();\r\n        }\r\n\r\n        else if (isDNSErr(err)) {\r\n            this.emit('fatalError', {\r\n                code:    ERR.PROXY_CANT_RESOLVE_ORIGIN_URL,\r\n                destUrl: this.opts.url\r\n            });\r\n        }\r\n        else\r\n            this.emit('error');\r\n    }\r\n}\r\n\r\n"],"sourceRoot":"../src"}