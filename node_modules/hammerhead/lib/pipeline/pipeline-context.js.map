{"version":3,"sources":["pipeline/pipeline-context.js"],"names":[],"mappings":"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","file":"pipeline/pipeline-context.js","sourcesContent":["import SHARED_CONST from '../../shared/const';\r\nimport * as urlUtils from '../../shared/url_util';\r\nimport * as contentUtils from '../utils/content';\r\n\r\n//TODO rewrite parseProxyUrl instead\r\nfunction flattenParsedProxyUrl (parsed) {\r\n    if (parsed) {\r\n        return {\r\n            dest:    {\r\n                url:           parsed.originUrl,\r\n                protocol:      parsed.originResourceInfo.protocol,\r\n                host:          parsed.originResourceInfo.host,\r\n                hostname:      parsed.originResourceInfo.hostname,\r\n                port:          parsed.originResourceInfo.port,\r\n                partAfterHost: parsed.originResourceInfo.partAfterHost,\r\n                resourceType:  parsed.resourceType\r\n            },\r\n            jobInfo: parsed.jobInfo\r\n        };\r\n    }\r\n}\r\n\r\nfunction getContentTypeUrlToken (isScript, isIFrame) {\r\n    if (isScript) return urlUtils.SCRIPT;\r\n    if (isIFrame) return urlUtils.IFRAME;\r\n    return null;\r\n}\r\n\r\n\r\nexport default class PipelineContext {\r\n    constructor (req, res, serverInfo) {\r\n        this.serverInfo    = serverInfo;\r\n        this.session       = null;\r\n\r\n        this.req     = req;\r\n        this.reqBody = null;\r\n        this.res     = res;\r\n\r\n        this.dest          = null;\r\n        this.destRes       = null;\r\n        this.destResBody   = null;\r\n        this.hasDestReqErr = false;\r\n\r\n        this.isXhr       = false;\r\n        this.isPage      = false;\r\n        this.isIFrame    = false;\r\n        this.contentInfo = null;\r\n\r\n        var acceptHeader = req.headers['accept'];\r\n\r\n        this.isXhr  = !!req.headers[SHARED_CONST.XHR_REQUEST_MARKER_HEADER];\r\n        this.isPage = !this.isXhr && acceptHeader && contentUtils.isPage(acceptHeader);\r\n    }\r\n\r\n    _getDestFromReferer (parsedReferer) {\r\n        // NOTE: browsers may send default port in referer.\r\n        // But, since we compose destination URL from it we\r\n        // need to skip port number if it's protocol default\r\n        // port. Some servers has host conditions which do not\r\n        // include port number.\r\n\r\n        var rDest         = parsedReferer.dest;\r\n        var isDefaultPort = (rDest.protocol === 'https:' && rDest.port === '443') ||\r\n                            (rDest.protocol === 'http:' && rDest.port === '80');\r\n\r\n        var dest = {\r\n            protocol:      rDest.protocol,\r\n            host:          isDefaultPort ? rDest.host.split(':')[0] : rDest.host,\r\n            hostname:      rDest.hostname,\r\n            port:          isDefaultPort ? '' : rDest.port,\r\n            partAfterHost: this.req.url\r\n        };\r\n\r\n        dest.url = urlUtils.formatUrl(dest);\r\n\r\n        return {\r\n            dest:    dest,\r\n            jobInfo: parsedReferer.jobInfo\r\n        };\r\n    }\r\n\r\n    _isFileDownload () {\r\n        var contentDisposition = this.destRes.headers['content-disposition'];\r\n\r\n        return contentDisposition &&\r\n               contentDisposition.indexOf('attachment') > -1 &&\r\n               contentDisposition.indexOf('filename') > -1;\r\n    }\r\n\r\n    _getInjectable (injectable) {\r\n        return injectable.map((url) => this.serverInfo.domain + url);\r\n    }\r\n\r\n    _initRequestNatureInfo () {\r\n        var acceptHeader = this.req.headers['accept'];\r\n\r\n        this.isXhr    = !!this.req.headers[SHARED_CONST.XHR_REQUEST_MARKER_HEADER];\r\n        this.isPage   = !this.isXhr && acceptHeader && contentUtils.isPage(acceptHeader);\r\n        this.isIFrame = this.dest.resourceType === urlUtils.IFRAME;\r\n    }\r\n\r\n    // API\r\n    dispatch (openSessions) {\r\n        var parsedReqUrl  = urlUtils.parseProxyUrlWrap(this.req.url);\r\n        var referer       = this.req.headers['referer'];\r\n        var parsedReferer = referer && urlUtils.parseProxyUrlWrap(referer);\r\n\r\n        //TODO remove it after parseProxyURL rewrite\r\n        parsedReqUrl  = flattenParsedProxyUrl(parsedReqUrl);\r\n        parsedReferer = flattenParsedProxyUrl(parsedReferer);\r\n\r\n        // NOTE: try to extract destination from the referer\r\n        if (!parsedReqUrl && parsedReferer)\r\n            parsedReqUrl = this._getDestFromReferer(parsedReferer);\r\n\r\n        if (parsedReqUrl) {\r\n            this.session = openSessions[parsedReqUrl.jobInfo.uid];\r\n\r\n            if (!this.session)\r\n                return false;\r\n\r\n            this.dest        = parsedReqUrl.dest;\r\n            this.dest.domain = urlUtils.getDomain(this.dest);\r\n\r\n            if (parsedReferer) {\r\n                this.dest.referer   = parsedReferer.dest.url;\r\n                this.dest.reqOrigin = urlUtils.getDomain(parsedReferer.dest);\r\n            }\r\n\r\n            this._initRequestNatureInfo();\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    buildContentInfo () {\r\n        var contentType = this.destRes.headers['content-type'] || '';\r\n        var accept      = this.req.headers['accept'] || '';\r\n\r\n        var isCSS      = contentUtils.isCSSResource(contentType, accept);\r\n        var isManifest = contentUtils.isManifest(contentType);\r\n        var isJSON     = contentUtils.isJSON(contentType);\r\n        var isScript   = this.dest.resourceType === urlUtils.SCRIPT ||\r\n                         contentUtils.isScriptResource(contentType, accept);\r\n\r\n        var requireProcessing = !this.isXhr &&\r\n                                (this.isPage || this.isIFrame || isCSS || isScript || isManifest || isJSON);\r\n\r\n        var isIFrameWithImageSrc = this.isIFrame && !this.isPage && /^\\s*image\\//.test(contentType);\r\n\r\n        if (this._isFileDownload())\r\n            this.session.handleFileDownload();\r\n\r\n        this.contentInfo = {\r\n            encoding:             this.destRes.headers['content-encoding'],\r\n            charset:              contentUtils.parseCharset(contentType),\r\n            requireProcessing:    requireProcessing,\r\n            isIFrameWithImageSrc: isIFrameWithImageSrc,\r\n            isCSS:                isCSS,\r\n            isScript:             isScript,\r\n            isManifest:           isManifest,\r\n            isJSON:               isJSON,\r\n            contentTypeUrlToken:  getContentTypeUrlToken(isScript, this.isIFrame)\r\n        };\r\n    }\r\n\r\n    getInjectableScripts () {\r\n        var taskScript = this.isIFrame ? '/iframe-task.js' : '/task.js';\r\n        var scripts    = this.session.injectable.scripts.concat(taskScript);\r\n\r\n        return this._getInjectable(scripts);\r\n    }\r\n\r\n    getInjectableStyles () {\r\n        return this._getInjectable(this.session.injectable.styles);\r\n    }\r\n\r\n    redirect (url) {\r\n        this.res.statusCode = 302;\r\n        this.res.setHeader('location', url);\r\n        this.res.end();\r\n    }\r\n\r\n    closeWithError (statusCode, resBody) {\r\n        this.res.statusCode = statusCode;\r\n\r\n        if (resBody) {\r\n            this.res.setHeader('content-type', 'text/html');\r\n            this.res.end(resBody);\r\n        }\r\n        else\r\n            this.res.end();\r\n    }\r\n\r\n    toProxyUrl (url, isCrossDomain, resourceType) {\r\n        var port = isCrossDomain ? this.serverInfo.crossDomainPort : this.serverInfo.port;\r\n\r\n        return urlUtils.getProxyUrl(url, this.serverInfo.hostname, port, this.session.id, '', resourceType);\r\n    }\r\n}"],"sourceRoot":"../src"}