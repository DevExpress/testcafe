{"version":3,"sources":["pipeline/header-transforms.js"],"names":[],"mappings":"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","file":"pipeline/header-transforms.js","sourcesContent":["import { parse as parseUrl, resolve as resolveUrl } from 'url';\r\nimport SHARED_CONST from '../../shared/const';\r\nimport * as urlUtils from '../../shared/url_util';\r\n\r\n// Skipping transform\r\nfunction skip () {\r\n    return void 0;\r\n}\r\n\r\n\r\n// Request headers\r\nvar requestTransforms = {\r\n    'host':           (src, ctx) => ctx.dest.host,\r\n    'referer':        (src, ctx) => ctx.dest.referer || void 0,\r\n    'origin':         (src, ctx) => ctx.dest.reqOrigin || src,\r\n    'content-length': (src, ctx) => ctx.reqBody.length,\r\n    'cookie':         skip,\r\n\r\n    [SHARED_CONST.XHR_REQUEST_MARKER_HEADER]: skip\r\n};\r\n\r\nvar requestForced = {\r\n    'cookie': (src, ctx) => ctx.session.cookies.getHeader(ctx.dest.url) || void 0,\r\n\r\n    // NOTE: all browsers except Chrome doesn't send 'Origin'-header\r\n    // in case of same domain XHR requests. So, if the destination request\r\n    // is actually cross-domain we need to force 'Origin'-header to support CORS. (see: B234325)\r\n    'origin': (src, ctx) => {\r\n        var force = ctx.isXhr && !src && ctx.dest.domain !== ctx.dest.reqOrigin;\r\n        return force ? ctx.dest.reqOrigin : src;\r\n    }\r\n};\r\n\r\n\r\n// Response headers\r\nvar responseTransforms = {\r\n    'set-cookie': (src, ctx) => {\r\n        if (src) {\r\n            var cookies = Array.isArray(src) ? src : [src];\r\n\r\n            cookies = cookies.filter((cookieStr) => !!cookieStr);\r\n            ctx.session.cookies.setByServer(ctx.dest.url, cookies);\r\n        }\r\n\r\n        // NOTE: delete header\r\n        return void 0;\r\n    },\r\n\r\n    // NOTE: disable Content Security Policy (see http://en.wikipedia.org/wiki/Content_Security_Policy)\r\n    'content-security-policy':               skip,\r\n    'content-security-policy-report-only':   skip,\r\n    'x-content-security-policy':             skip,\r\n    'x-content-security-policy-report-only': skip,\r\n    'x-webkit-csp':                          skip,\r\n\r\n    // NOTE: we perform CORS checks on our side, so we skip related headers\r\n    'access-control-allow-origin': skip,\r\n\r\n    // NOTE: change transform type if we have iFrame with image as src,\r\n    // because it was transformed to the HTML with the image tag\r\n    'content-type':   (src, ctx) => ctx.contentInfo.isIFrameWithImageSrc ? 'text/html' : src,\r\n    'content-length': (src, ctx) => ctx.contentInfo.requireProcessing ? ctx.destResBody.length : src,\r\n\r\n    'location': (src, ctx) => {\r\n        // NOTE: RFC 1945 standard requires location URL to be absolute.\r\n        // However, most popular browsers will accept a relative URL.\r\n        // We transform relative URLs to absolute to correctly handle this situation.\r\n        var { host } = parseUrl(src);\r\n\r\n        if (!host)\r\n            src = resolveUrl(ctx.dest.url, src);\r\n\r\n        var isCrossDomain = ctx.isIFrame && !urlUtils.sameOriginCheck(ctx.dest.url, src);\r\n\r\n        return ctx.toProxyUrl(src, isCrossDomain, ctx.contentInfo.contentTypeUrlToken);\r\n    }\r\n};\r\n\r\n\r\n// Transformation routine\r\nfunction transformHeaders (srcHeaders, ctx, transforms, forced) {\r\n    var destHeaders = {};\r\n\r\n    var applyTransform = function (headerName, srcHeaders, transforms) {\r\n        var src       = srcHeaders[headerName];\r\n        var transform = transforms[headerName];\r\n        var dest      = transform ? transform(src, ctx) : src;\r\n\r\n        if (dest !== void 0)\r\n            destHeaders[headerName] = dest;\r\n    };\r\n\r\n    Object.keys(srcHeaders).forEach((headerName) => applyTransform(headerName, srcHeaders, transforms));\r\n\r\n    if (forced)\r\n        Object.keys(forced).forEach((headerName) => applyTransform(headerName, destHeaders, forced));\r\n\r\n    return destHeaders;\r\n}\r\n\r\n// API\r\nexport function forRequest (ctx) {\r\n    return transformHeaders(ctx.req.headers, ctx, requestTransforms, requestForced);\r\n}\r\n\r\nexport function forResponse (ctx) {\r\n    return transformHeaders(ctx.destRes.headers, ctx, responseTransforms);\r\n}"],"sourceRoot":"../src"}