{"version":3,"sources":["task-script.js"],"names":[],"mappings":";;;;;kBAOwB,MAAM;;oBAPb,MAAM;;;;kBACR,IAAI;;;;AAEnB,IAAM,kBAAkB,GAAG,eAAK,IAAI,CAAC,SAAS,EAAE,gDAAgD,CAAC,CAAC;AAClG,IAAM,aAAa,GAAQ,aAAG,YAAY,CAAC,kBAAkB,CAAC,CAAC,QAAQ,EAAE,CAAC;AAC1E,IAAM,MAAM,GAAe,oBAAoB,CAAC;;AAEjC,SAAS,MAAM,CAAE,IAAI,EAAE;AAClC,WAAO,aAAa,CAAC,OAAO,CAAC,MAAM,EAAE,UAAC,GAAG,EAAE,OAAO;eAAK,IAAI,CAAC,OAAO,CAAC,KAAK,KAAK,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC;KAAA,CAAC,CAAC;CAC1G","file":"task-script.js","sourcesContent":["import path from 'path';\r\nimport fs from 'fs';\r\n\r\nconst TASK_TEMPLATE_FILE = path.join(__dirname, '../../_compiled_/hammerhead_client/task.jstmpl');\r\nconst TASK_TEMPLATE      = fs.readFileSync(TASK_TEMPLATE_FILE).toString();\r\nconst VAR_RE             = /\"<@\\s*(\\S+)\\s*@>\"/g;\r\n\r\nexport default function render (vars) {\r\n    return TASK_TEMPLATE.replace(VAR_RE, (str, varName) => vars[varName] === void 0 ? str : vars[varName]);\r\n}"],"sourceRoot":"../src"}