{
  "name": "iconv-lite",
  "description": "Convert character encodings in pure javascript.",
  "version": "0.4.0-pre3",
  "license": "MIT",
  "keywords": [
    "iconv",
    "convert",
    "charset",
    "icu"
  ],
  "author": {
    "name": "Alexander Shtuchkin",
    "email": "ashtuchkin@gmail.com"
  },
  "contributors": [
    {
      "name": "Jinwu Zhan",
      "url": "https://github.com/jenkinv"
    },
    {
      "name": "Adamansky Anton",
      "url": "https://github.com/adamansky"
    },
    {
      "name": "George Stagas",
      "url": "https://github.com/stagas"
    },
    {
      "name": "Mike D Pilsbury",
      "url": "https://github.com/pekim"
    },
    {
      "name": "Niggler",
      "url": "https://github.com/Niggler"
    },
    {
      "name": "wychi",
      "url": "https://github.com/wychi"
    },
    {
      "name": "David Kuo",
      "url": "https://github.com/david50407"
    },
    {
      "name": "ChangZhuo Chen",
      "url": "https://github.com/czchen"
    },
    {
      "name": "Lee Treveil",
      "url": "https://github.com/leetreveil"
    },
    {
      "name": "Brian White",
      "url": "https://github.com/mscdex"
    }
  ],
  "main": "index.js",
  "homepage": "https://github.com/ashtuchkin/iconv-lite",
  "bugs": {
    "url": "https://github.com/ashtuchkin/iconv-lite/issues"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/ashtuchkin/iconv-lite.git"
  },
  "engines": {
    "node": ">=0.8.0"
  },
  "scripts": {
    "test": "mocha --reporter spec --grep ."
  },
  "devDependencies": {
    "mocha": "*",
    "request": "*",
    "unorm": "*",
    "errto": "*",
    "async": "*",
    "iconv": "2.x"
  },
  "readme": "## Pure JS character encoding conversion\n\n<!-- [![Build Status](https://secure.travis-ci.org/ashtuchkin/iconv-lite.png?branch=master)](http://travis-ci.org/ashtuchkin/iconv-lite) -->\n\n * Doesn't need native code compilation. Works on Windows and in sandboxed environments like [Cloud9](http://c9.io).\n * Used in popular projects like [Grunt](http://gruntjs.com/), [Nodemailer](http://www.nodemailer.com/), [Yeoman](http://yeoman.io/) and others.\n * Faster than [node-iconv](https://github.com/bnoordhuis/node-iconv) (see below for performance comparison).\n * Intuitive encode/decode API + streaming API in Node v0.10+\n * License: MIT.\n\n[![NPM Stats](https://nodei.co/npm/iconv-lite.png?downloads=true)](https://npmjs.org/packages/iconv-lite/)\n\n## Usage\n\n    var iconv = require('iconv-lite');\n    \n    // Convert from an encoded buffer to js string.\n    str = iconv.decode(buf, 'win1251');\n    \n    // Convert from js string to an encoded buffer.\n    buf = iconv.encode(\"Sample input string\", 'win1251');\n\n    // Check if encoding is supported\n    iconv.encodingExists(\"us-ascii\")\n\n\n    // Decode stream example (from binary stream to js strings)\n    // Only available in Node v0.10+\n    http.createServer(function(req, res) {\n        var converterStream = iconv.decodeStream('win1251');\n        req.pipe(converterStream);\n\n        converterStream.on('data', function(str) {\n            console.log(str); // Do something with decoded strings, chunk-by-chunk.\n        });\n    });\n\n    // Convert encoding streaming example\n    fs.createReadStream('file-in-win1251.txt')\n        .pipe(iconv.decodeStream('win1251'))\n        .pipe(iconv.encodeStream('ucs2'))\n        .pipe(fs.createWriteStream('file-in-ucs2.txt'));\n\n    // Sugar: all encode/decode streams have .collect(cb) method to accumulate data.\n    http.createServer(function(req, res) {\n        req.pipe(iconv.decodeStream('win1251')).collect(function(err, body) {\n            assert(typeof body == 'string');\n            console.log(body); // full request body string\n        });\n    });\n\n    // For the brave/lazy: make Node basic primitives understand all iconv encodings.\n    require('iconv-lite').extendNodeEncodings();\n\n    buf = new Buffer(str, 'win1251');\n    buf.write(str, 'gbk');\n    str = buf.toString('latin1');\n    assert(Buffer.isEncoding('iso-8859-15'));\n    Buffer.byteLength(str, 'us-ascii');\n\n    http.createServer(function(req, res) {\n        req.setEncoding('big5');\n        req.collect(function(err, body) {\n            console.log(body);\n        });\n    });\n\n    fs.createReadStream(\"file.txt\", \"shift_jis\");\n\n    // External modules are also supported (if they use Node primitives).\n    request = require('request');\n    request({\n        url: \"http://github.com/\", \n        encoding: \"cp932\"\n    });\n    \n\n## Supported encodings\n\n *  All node.js native encodings: 'utf8', 'ucs2', 'ascii', 'binary', 'base64'\n *  All widespread singlebyte encodings: Windows 125x family, ISO-8859 family, \n    IBM/DOS codepages, Macintosh family, KOI8 family, all others supported by iconv library. \n    Aliases like 'latin1', 'us-ascii' also supported.\n *  Multibyte encodings: CP932, CP936, CP949, CP950, GBK, GB2313, Big5, Shift_JIS.\n\nMost singlebyte encodings are generated automatically from [node-iconv](https://github.com/bnoordhuis/node-iconv). Thank you Ben Noordhuis and iconv authors!\n\nNot supported yet: GB18030, EUC family, ISO2022 family.\n\n\n## Encoding/decoding speed\n\nComparison with node-iconv module (1000x256kb, on MacBook Pro, Core i5/2.6 GHz, Node v0.10.26). \nNote: your results may vary, so please always check on your hardware.\n\n    operation             iconv@2.0.7   iconv-lite@0.4.0\n    ----------------------------------------------------------\n    encode('win1251')     ~115 Mb/s     ~340 Mb/s\n    decode('win1251')     ~110 Mb/s     ~180 Mb/s\n\n\n## Notes\n\nWhen decoding, a 'binary'-encoded string can be used as a source buffer.  \nUntranslatable characters are set to ï¿½ or ?. No transliteration is currently supported.\n\n## Testing\n\n    git clone git@github.com:ashtuchkin/iconv-lite.git\n    cd iconv-lite\n    npm install\n    npm test\n    \n    # To view performance:\n    node test/performance.js\n\n## Adoption\n[![NPM](https://nodei.co/npm-dl/iconv-lite.png)](https://nodei.co/npm/iconv-lite/)\n\n",
  "readmeFilename": "README.md",
  "_id": "iconv-lite@0.4.0-pre3",
  "_from": "iconv-lite@0.4"
}
