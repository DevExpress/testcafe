{
  "author": {
    "name": "Nick Fisher"
  },
  "name": "deepmerge",
  "description": "A library for deep (recursive) merging of Javascript objects",
  "version": "0.2.7",
  "homepage": "https://github.com/nrf110/deepmerge",
  "repository": {
    "type": "git",
    "url": "git://github.com/nrf110/deepmerge.git"
  },
  "main": "index",
  "engines": {
    "node": ">=0.4.0"
  },
  "scripts": {
    "test": "tap test/*.js"
  },
  "dependencies": {},
  "devDependencies": {
    "tap": "~0.2.4"
  },
  "readme": "deepmerge\n=========\n\nMerge the enumerable attributes of two objects deeply.\n\nexample\n=======\n\n```js\nvar util = require('util')\nvar merge = require('deepmerge')\n\nvar x = { foo: { bar: 3 },\n  array: [ { does: 'work', too: [ 1, 2, 3 ] } ] }\nvar y = { foo: { baz: 4 },\n  quux: 5,\n  array: [ { does: 'work', too: [ 4, 5, 6 ] }, { really: 'yes' } ] }\n\nconsole.log(util.inspect(merge(x, y), false, null))\n```\n\noutput:\n\n```js\n{ foo: { bar: 3, baz: 4 },\n  array: [ { does: 'work', too: [ 1, 2, 3, 4, 5, 6 ] }, { really: 'yes' } ],\n  quux: 5 }\n```\n\nmethods\n=======\n\nvar merge = require('deepmerge')\n\nmerge(x, y)\n-----------\n\nMerge two objects `x` and `y` deeply, returning a new merged object with the\nelements from both `x` and `y`.\n\nIf an element at the same key is present for both `x` and `y`, the value from\n`y` will appear in the result.\n\nThe merge is immutable, so neither `x` nor `y` will be modified.\n\nThe merge will also merge arrays and array values.\n\ninstall\n=======\n\nWith [npm](http://npmjs.org) do:\n\n```\nnpm install deepmerge\n```\n\ntest\n====\n\nWith [npm](http://npmjs.org) do:\n\n```\nnpm test\n```\n",
  "readmeFilename": "README.markdown",
  "bugs": {
    "url": "https://github.com/nrf110/deepmerge/issues"
  },
  "_id": "deepmerge@0.2.7",
  "_from": "deepmerge@~0.2.7"
}
