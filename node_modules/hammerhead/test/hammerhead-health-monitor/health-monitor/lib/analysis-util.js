var Proxy = require('../../../../lib/proxy');
var Session = require('../../../../lib/session');
var urlUtils = require('../../../../lib/url_util');

// Consts
var SERVICE_URLS_REGEXP = /\/(hammerhead.js|task.js|tccservicemsg)$/;

var proxy = null;

exports.init = function (port1, port2) {
    proxy = new Proxy('localhost', port1, port2);
};

exports.equalUrls = function (originUrl, proxyUrl) {
    var parsedProxyUrl = urlUtils.parseProxyUrl(proxyUrl);

    return parsedProxyUrl ? parsedProxyUrl.originUrl === originUrl : proxyUrl === originUrl;
};

exports.createSession = function (url) {
    var session = new Session();

    session._getIFramePayloadScript = function () {
        return 'localStorage.clear();';
    };
    session._getPayloadScript = function () {
        return 'if(window === window.top) localStorage.clear();';
    };
    session.getAuthCredentials = function () {
        return {};
    };
    session.handleFileDownload = function () {
    };
    session.handlePageError = function () {
        return false;
    };

    return proxy.openSession(url, session);
};

exports.isServiceUrl = function (url) {
    return SERVICE_URLS_REGEXP.test(url);
};

exports.isProxyUrl = function (url) {
    return !!urlUtils.parseProxyUrl(url);
};

exports.calcMedian = function (array) {
    var arrMedian = array.length % 2 ? Math.floor(array.length / 2) : Math.round(array.length / 2);

    array.sort(function (a, b) {
        return a - b;
    });

    return array.length % 2 ? array[arrMedian] : (array[arrMedian] + array[arrMedian - 1]) / 2;
};