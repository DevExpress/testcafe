// Const
var COLOR_FOR_CHART_ERROR             = '#dddddd';
var COLOR_FOR_CHART_LOAD_EVENT        = '#33B5E5';
var COLOR_FOR_CHART_DOM_LOAD_EVENT    = '#99CC00';
var COLOR_FOR_CHART_DOCUMENT_RES      = '#AA66CC';
var COLOR_FOR_CHART_SCRIPT_RES        = '#FFBB33';
var COLOR_FOR_CHART_STYLE_RES         = '#FF8800';
var COLOR_FOR_CHART_LOAD_FR_EVENT     = '#99daf2';
var COLOR_FOR_CHART_DOM_LOAD_FR_EVENT = '#cce57f';
var COLOR_FOR_CHART_DOCUMENT_FR_RES   = '#d4b2e5';
var COLOR_FOR_CHART_SCRIPT_FR_RES     = '#ffdd99';
var COLOR_FOR_CHART_STYLE_FR_RES      = '#ffc37f';
var LAST_RESULT_COUNT                 = 60;

window.addEventListener('load', function () {
    var sourceLength      = window.dataSource.length;
    var eventStatisticsEl = document.querySelector('#statistics');
    var minAxisValue      = Math.min(window.limitLoad, window.limitDomLoad) * 0.7;
    var maxAxisValue      = Math.max(window.limitLoad, window.limitDomLoad) * 1.3;

    var chartOptions = {
        dataSource:           window.dataSource,
        panes:                [
            { name: 'events' },
            { name: 'resources' }
        ],
        commonSeriesSettings: { argumentField: 'arg' },
        pointClick:           function (clickedPoint) {
            window.location = '/history?timestamp=' +
                              window.dataSource[Math.round(clickedPoint.argument)].timestamp;
        },
        tooltip:              {
            enabled:       true,
            customizeText: function () {
                var tooltip = '';

                if (this.seriesName === 'Sites with<br>errors') {
                    tooltip = '<span style="color: #690;">' +
                              window.dataSource[Math.round(this.argument)].withoutErrors + '</span>' +
                              ' / ' + '<span style="color: #f44;">' +
                              window.dataSource[Math.round(this.argument)].withErrors + '</span>';
                } else
                    tooltip = 'Value: ' + this.value.toFixed(3) + '<br>' +
                              window.getStringTime(window.dataSource[Math.round(this.argument)].timestamp);

                return tooltip;
            }
        },
        useAggregation:       true,
        legend:               {
            verticalAlignment:   'bottom',
            horizontalAlignment: 'center'
        },
        argumentAxis:         {
            tickInterval: 1
        },
        valueAxis:            [{
            name:     'errors',
            min:      0,
            position: 'right',
            label:    {
                format: 'largeNumber'
            }
        }, {
            name:          'event',
            min:           minAxisValue,
            max:           maxAxisValue,
            constantLines: [{
                label:     {
                    text:              'Load limit',
                    verticalAlignment: window.limitLoad < window.limitDomLoad ? 'bottom' : 'top'
                },
                width:     2,
                value:     window.limitLoad,
                color:     COLOR_FOR_CHART_LOAD_EVENT,
                dashStyle: 'dash'
            }, {
                label:     {
                    text:              'Ready limit',
                    verticalAlignment: window.limitLoad > window.limitDomLoad ? 'bottom' : 'top'
                },
                width:     2,
                value:     window.limitDomLoad,
                color:     COLOR_FOR_CHART_DOM_LOAD_EVENT,
                dashStyle: 'dash'
            }]
        }, {
            name: 'resource',
            min:  minAxisValue,
            max:  maxAxisValue
        }],
        series:               [{
            name:       'Sites with<br>errors',
            axis:       'errors',
            pane:       'events',
            valueField: 'withErrors',
            type:       'stackedbar',
            color:      COLOR_FOR_CHART_ERROR
        }, {
            name:       'Load event (fr)',
            axis:       'event',
            pane:       'events',
            valueField: 'load_fr',
            color:      COLOR_FOR_CHART_LOAD_FR_EVENT
        }, {
            name:       'Load event',
            axis:       'event',
            pane:       'events',
            valueField: 'load',
            color:      COLOR_FOR_CHART_LOAD_EVENT
        }, {
            name:       'Ready event (fr)',
            axis:       'event',
            pane:       'events',
            valueField: 'domLoad_fr',
            color:      COLOR_FOR_CHART_DOM_LOAD_FR_EVENT
        }, {
            name:       'Ready event',
            axis:       'event',
            pane:       'events',
            valueField: 'domLoad',
            color:      COLOR_FOR_CHART_DOM_LOAD_EVENT
        }, {
            name:       'Document (fr)',
            pane:       'resources',
            axis:       'resource',
            valueField: 'document_fr',
            color:      COLOR_FOR_CHART_DOCUMENT_FR_RES
        }, {
            name:       'Document',
            pane:       'resources',
            axis:       'resource',
            valueField: 'document',
            color:      COLOR_FOR_CHART_DOCUMENT_RES
        }, {
            name:       'Script (fr)',
            pane:       'resources',
            axis:       'resource',
            valueField: 'script_fr',
            color:      COLOR_FOR_CHART_SCRIPT_FR_RES
        }, {
            name:       'Script',
            pane:       'resources',
            axis:       'resource',
            valueField: 'script',
            color:      COLOR_FOR_CHART_SCRIPT_RES
        }, {
            name:       'Stylesheet (fr)',
            pane:       'resources',
            axis:       'resource',
            valueField: 'stylesheet_fr',
            color:      COLOR_FOR_CHART_STYLE_FR_RES
        }, {
            name:       'Stylesheet',
            pane:       'resources',
            axis:       'resource',
            valueField: 'stylesheet',
            color:      COLOR_FOR_CHART_STYLE_RES
        }]
    };

    var rangeOptions = {
        size:                 { height: 80 },
        dataSource:           window.dataSource,
        chart:                {
            series:         [{
                valueField: 'load',
                color:      COLOR_FOR_CHART_LOAD_EVENT
            }, {
                valueField: 'domLoad',
                color:      COLOR_FOR_CHART_DOM_LOAD_EVENT
            }],
            useAggregation: true
        },
        scale:                {
            minRange:          1,
            minorTickInterval: 1,
            majorTickInterval: 1
        },
        selectedRange:        {
            startValue: sourceLength > LAST_RESULT_COUNT ? sourceLength - LAST_RESULT_COUNT : 0,
            endValue:   sourceLength - 1
        },
        sliderMarker:         {
            customizeText: function () {
                return window.getStringTime(window.dataSource[Math.round(this.value)].timestamp);
            }
        },
        behavior:             {
            callSelectedRangeChanged: 'onMoving',
            snapToTicks:              true
        },
        selectedRangeChanged: changeRange
    };

    window.ko.applyBindings({ chartOptions: chartOptions, rangeOptions: rangeOptions }, eventStatisticsEl);

    changeRange({
        startValue: rangeOptions.selectedRange.startValue,
        endValue:   rangeOptions.selectedRange.endValue
    });

    function changeRange (e) {
        var zoomedChart = $('#statistics .zoomedChart').dxChart('instance');
        zoomedChart.zoomArgument(e.startValue - 1, e.endValue + 1);
    }
});
