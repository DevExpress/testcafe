<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TestCafe</title>
    <description></description>
    <link>http://devexpress.github.io/testcafe/</link>
    <atom:link href="http://devexpress.github.io/testcafe/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 25 Oct 2018 18:34:46 +0300</pubDate>
    <lastBuildDate>Thu, 25 Oct 2018 18:34:46 +0300</lastBuildDate>
    <generator>Jekyll v3.8.4</generator>
    
      <item>
        <title>TestCafe v0.23.0 Released</title>
        <description>&lt;h1&gt;TestCafe v0.23.0 Released&lt;/h1&gt;
&lt;p&gt;Stop a test run after the first test fail, view JavaScript errors&amp;#39; stack trace in test run reports and let TestCafe restart browsers when they stop responding.&lt;/p&gt;

&lt;!--more--&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;enhancements&quot;&gt;&lt;/a&gt;Enhancements &lt;a class=&quot;permalink&quot; href=&quot;#enhancements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;stop-test-run-after-the-first-test-fail-1323&quot;&gt;&lt;/a&gt;⚙ Stop Test Run After the First Test Fail (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1323&quot;&gt;#1323&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#stop-test-run-after-the-first-test-fail-1323&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can now configure TestCafe to stop the entire test run after the first test fail. This saves your time when you fix problems with your tests one by one.&lt;/p&gt;

&lt;p&gt;Specify the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/command-line-interface.html#--sf---stop-on-first-fail&quot;&gt;--sf&lt;/a&gt; flag to enable this feature when you run tests from the command line.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;testcafe chrome my-tests --sf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the API, use the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/programming-interface/runner.html#run&quot;&gt;stopOnFirstFail&lt;/a&gt; option.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;runner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;stopOnFirstFail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;view-the-javascript-errors-stack-traces-in-reports-2043&quot;&gt;&lt;/a&gt;⚙ View the JavaScript Errors&amp;#39; Stack Traces in Reports (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2043&quot;&gt;#2043&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#view-the-javascript-errors-stack-traces-in-reports-2043&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Now when a JavaScript error occurs on the tested webpage, the test run report includes a stack trace for this error (only if the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/command-line-interface.html#-e---skip-js-errors&quot;&gt;--skip-js-errors&lt;/a&gt; option is disabled).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/client-error-stack-report.png&quot; alt=&quot;A report that contains a stack trace for a client JS error&quot;&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;browsers-are-automatically-restarted-when-they-stop-responding-1815&quot;&gt;&lt;/a&gt;⚙ Browsers are Automatically Restarted When They Stop Responding (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1815&quot;&gt;#1815&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#browsers-are-automatically-restarted-when-they-stop-responding-1815&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If a browser stops responding while it executes tests, TestCafe restarts the browser and reruns the current test in a new browser instance.
If the same problem occurs with this test two more times, the test run finishes and an error is thrown.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;bug-fixes&quot;&gt;&lt;/a&gt;Bug Fixes &lt;a class=&quot;permalink&quot; href=&quot;#bug-fixes&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;An error message about an unawaited call to an async function is no longer displayed when an uncaught error occurs (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2557&quot;&gt;#2557&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;A request hook is no longer added multiple times when a filter rule is used (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2650&quot;&gt;#2650&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Screenshot links in test run reports now contain paths specified by the &lt;code&gt;--screenshot-pattern&lt;/code&gt; option (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2726&quot;&gt;#2726&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Assertion chains no longer produce unhandled promise rejections (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2852&quot;&gt;#2852&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;moment&lt;/code&gt; loader now works correctly in the Jest environment (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2500&quot;&gt;#2500&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;TestCafe no longer hangs if the screenshot directory contains forbidden symbols (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/681&quot;&gt;#681&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;--ssl&lt;/code&gt; option&amp;#39;s parameters are now parsed correctly (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2924&quot;&gt;#2924&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;TestCafe now throws a meaningful error if an assertion method is missing (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1063&quot;&gt;#1063&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;TestCafe no longer hangs when it clicks a custom element (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2861&quot;&gt;#2861&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;TestCafe now performs keyboard navigation between radio buttons/groups in a way that matches the native browser behavior (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2067&quot;&gt;#2067&lt;/a&gt;, &lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2045&quot;&gt;#2045&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;fetch&lt;/code&gt; method can now be used with data URLs (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2865&quot;&gt;#2865&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;switchToIframe&lt;/code&gt; function no longer throws an error (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2956&quot;&gt;#2956&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;TestCafe can now scroll through fixed elements when the action has custom offsets (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2978&quot;&gt;#2978&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;You can now specify the current directory or its parent directories as the base path to store screenshots (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2975&quot;&gt;#2975&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Tests no longer hang up when you try to debug in headless browsers (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2846&quot;&gt;#2846&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;removeEventListener&lt;/code&gt; function now works correctly when an object is passed as its third argument (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1737&quot;&gt;testcafe-hammerhead/#1737&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Hammerhead no longer adds the &lt;code&gt;event&lt;/code&gt; property to a null &lt;code&gt;contentWindow&lt;/code&gt; in IE11 (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1684&quot;&gt;testcafe-hammerhead/#1684&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The browser no longer resets connection with the server for no reason (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1647&quot;&gt;testcafe-hammerhead/#1647&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Hammerhead now stringifies values correctly before outputting them to the console (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1750&quot;&gt;testcafe-hammerhead/#1750&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;A document fragment from the top window can now be correctly appended to an iframe (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/912&quot;&gt;testcafe-hammerhead/#912&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Lifecycle callbacks that result from the &lt;code&gt;document.registerElement&lt;/code&gt; method are no longer called twice (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/695&quot;&gt;testcafe-hammerhead/#695&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 25 Oct 2018 00:00:00 +0300</pubDate>
        <link>http://devexpress.github.io/testcafe/blog/testcafe-v0-23-0-released.html</link>
        <guid isPermaLink="true">http://devexpress.github.io/testcafe/blog/testcafe-v0-23-0-released.html</guid>
        
        
      </item>
    
      <item>
        <title>TestCafe v0.22.0 Released</title>
        <description>&lt;h1&gt;TestCafe v0.22.0 Released&lt;/h1&gt;
&lt;p&gt;Write tests in CoffeeScript, view failed selector methods in test run reports and detect server-side errors and unhandled promise rejections.&lt;/p&gt;

&lt;!--more--&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;enhancements&quot;&gt;&lt;/a&gt;Enhancements &lt;a class=&quot;permalink&quot; href=&quot;#enhancements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;coffeescript-support-1556-by-geoffreybooth&quot;&gt;&lt;/a&gt;⚙ CoffeeScript Support (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1556&quot;&gt;#1556&lt;/a&gt;) by &lt;a href=&quot;https://github.com/GeoffreyBooth&quot;&gt;@GeoffreyBooth&lt;/a&gt; &lt;a class=&quot;permalink&quot; href=&quot;#coffeescript-support-1556-by-geoffreybooth&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;TestCafe now allows you to write tests in CoffeeScript. You do not need to compile CoffeeScript manually or make any customizations - everything works out of the box.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-coffee&quot; data-lang=&quot;coffee&quot;&gt;&lt;span class=&quot;nx&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Selector&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'testcafe'&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;fixture&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'CoffeeScript Example'&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'https://devexpress.github.io/testcafe/example/'&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;nameInput&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Selector&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'#developer-name'&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Test'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;typeText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nameInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Peter'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;typeText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nameInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Paker'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;typeText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nameInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'r'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;caretPos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nameInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;eql&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Parker'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;failed-selector-method-pinpointed-in-the-report-2568&quot;&gt;&lt;/a&gt;⚙ Failed Selector Method Pinpointed in the Report (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2568&quot;&gt;#2568&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#failed-selector-method-pinpointed-in-the-report-2568&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Now the test run report can identify which selector&amp;#39;s method does not match any DOM element.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/failed-selector-report.png&quot; alt=&quot;Failed Selector Report&quot;&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;fail-on-uncaught-server-errors-2546&quot;&gt;&lt;/a&gt;⚙ Fail on Uncaught Server Errors (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2546&quot;&gt;#2546&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#fail-on-uncaught-server-errors-2546&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Previously, TestCafe ignored uncaught errors and unhandled promise rejections that occurred on the server. Whenever an error or a promise rejection happened, test execution continued.&lt;/p&gt;

&lt;p&gt;Starting from v0.22.0, tests fail if a server error or promise rejection is unhandled. To return to the previous behavior, we have introduced the &lt;code&gt;skipUncaughtErrors&lt;/code&gt; option. Use the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/command-line-interface.html#-u---skip-uncaught-errors&quot;&gt;--skip-uncaught-errors&lt;/a&gt; flag in the command line or the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/programming-interface/runner.html#run&quot;&gt;skipUncaughtErrors&lt;/a&gt; option in the API.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;testcafe chrome tests/fixture.js --skipUncaughtErrors
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;runner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;skipUncaughtErrors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;use-glob-patterns-in-runnersrc-980&quot;&gt;&lt;/a&gt;⚙ Use Glob Patterns in &lt;code&gt;runner.src&lt;/code&gt; (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/980&quot;&gt;#980&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#use-glob-patterns-in-runnersrc-980&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can now use &lt;a href=&quot;https://github.com/isaacs/node-glob#glob-primer&quot;&gt;glob patterns&lt;/a&gt; in the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/programming-interface/runner.html#src&quot;&gt;runner.src&lt;/a&gt; method to specify a set of test files.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;runner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/home/user/tests/**/*.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'!/home/user/tests/foo.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;bug-fixes&quot;&gt;&lt;/a&gt;Bug Fixes &lt;a class=&quot;permalink&quot; href=&quot;#bug-fixes&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;RequestLogger&lt;/code&gt; no longer fails when it tries to stringify a null request body (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2718&quot;&gt;#2718&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Temporary directories are now correctly removed when the test run is finished (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2735&quot;&gt;#2735&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;TestCafe no longer throws &lt;code&gt;ECONNRESET&lt;/code&gt; when run against a Webpack project (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2711&quot;&gt;#2711&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;An error is no longer thrown when TestCafe tests Sencha ExtJS applications in IE11 (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2639&quot;&gt;#2639&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Firefox no longer waits for page elements to appear without necessity (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2080&quot;&gt;#2080&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;${BROWSER}&lt;/code&gt; in the screenshot pattern now correctly resolves to the browser name (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2742&quot;&gt;#2742&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;toString&lt;/code&gt; function now returns a native string for overridden descriptor ancestors (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1713&quot;&gt;testcafe-hammerhead/#1713&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;iframe&lt;/code&gt; flag is no longer added when a form with &lt;code&gt;target=&amp;quot;_parent&amp;quot;&lt;/code&gt; is submitted (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1680&quot;&gt;testcafe-hammerhead/#1680&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Hammerhead no longer sends request headers in lower case (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1380&quot;&gt;testcafe-hammerhead/#1380&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The overridden &lt;code&gt;createHTMLDocument&lt;/code&gt; method has the right context now (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1722&quot;&gt;testcafe-hammerhead/#1722&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Tests no longer lose connection (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1647&quot;&gt;testcafe-hammerhead/#1647&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The case when both the &lt;code&gt;X-Frame-Options&lt;/code&gt; header and a CSP with &lt;code&gt;frame-ancestors&lt;/code&gt; are set is now handled correctly (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1666&quot;&gt;testcafe-hammerhead/#1666&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The mechanism that resolves URLs on the client now works correctly (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1701&quot;&gt;testcafe-hammerhead/#1701&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LiveNodeListWrapper&lt;/code&gt; now imitates the native behavior correctly (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1376&quot;&gt;testcafe-hammerhead/#1376&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 03 Sep 2018 00:00:00 +0300</pubDate>
        <link>http://devexpress.github.io/testcafe/blog/testcafe-v0-22-0-released.html</link>
        <guid isPermaLink="true">http://devexpress.github.io/testcafe/blog/testcafe-v0-22-0-released.html</guid>
        
        
      </item>
    
      <item>
        <title>TestCafe v0.21.0 Released</title>
        <description>&lt;h1&gt;TestCafe v0.21.0 Released&lt;/h1&gt;
&lt;p&gt;Test web pages served over HTTPS, construct screenshot paths with patterns and use more info in custom reporters.&lt;/p&gt;

&lt;!--more--&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;enhancements&quot;&gt;&lt;/a&gt;Enhancements &lt;a class=&quot;permalink&quot; href=&quot;#enhancements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;test-web-pages-served-over-https-1985&quot;&gt;&lt;/a&gt;⚙ Test Web Pages Served Over HTTPS (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1985&quot;&gt;#1985&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#test-web-pages-served-over-https-1985&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Some browser features (like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API&quot;&gt;Service Workers&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Geolocation_API&quot;&gt;Geolocation API&lt;/a&gt;, &lt;a href=&quot;https://developer.apple.com/documentation/apple_pay_on_the_web/applepaysession&quot;&gt;ApplePaySession&lt;/a&gt;, or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto&quot;&gt;SubtleCrypto&lt;/a&gt;) require a secure origin. This means that the website should use the HTTPS protocol.&lt;/p&gt;

&lt;p&gt;Starting with v0.21.0, TestCafe can serve proxied web pages over HTTPS. This allows you to test pages that require a secure origin.&lt;/p&gt;

&lt;p&gt;To enable HTTPS when you use TestCafe through the command line, specify the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/command-line-interface.html#--ssl-options&quot;&gt;--ssl&lt;/a&gt; flag followed by the &lt;a href=&quot;https://nodejs.org/api/https.html#https_https_createserver_options_requestlistener&quot;&gt;HTTPS server options&lt;/a&gt;. The most commonly used options are described in the &lt;a href=&quot;https://nodejs.org/api/tls.html#tls_tls_createsecurecontext_options&quot;&gt;TLS topic&lt;/a&gt; in the Node.js documentation.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;testcafe --ssl &lt;span class=&quot;nv&quot;&gt;pfx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;path/to/file.pfx;rejectUnauthorized&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;;...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you use a programming API, pass the HTTPS server options to the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/programming-interface/createtestcafe.html&quot;&gt;createTestCafe&lt;/a&gt; method.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;s1&quot;&gt;'use strict'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createTestCafe&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'testcafe'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;selfSignedSertificate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'openssl-self-signed-certificate'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;runner&lt;/span&gt;                  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sslOptions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;nx&quot;&gt;selfSignedSertificate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;cert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;selfSignedSertificate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cert&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;createTestCafe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'localhost'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1337&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1338&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sslOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;testcafe&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;runner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;testcafe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createRunner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;runner&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'test.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;// Browsers restrict self-signed certificate usage unless you&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// explicitly set a flag specific to each browser.&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// For Chrome, this is '--allow-insecure-localhost'.&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;browsers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'chrome --allow-insecure-localhost'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/common-concepts/connect-to-the-testcafe-server-over-https.html&quot;&gt;Connect to TestCafe Server over HTTPS&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;construct-screenshot-paths-with-patterns-2152&quot;&gt;&lt;/a&gt;⚙ Construct Screenshot Paths with Patterns (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2152&quot;&gt;#2152&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#construct-screenshot-paths-with-patterns-2152&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can now use patterns to construct paths to screenshots. TestCafe provides a number of placeholders you can include in the path, for example, &lt;code&gt;${DATE}&lt;/code&gt;, &lt;code&gt;${TIME}&lt;/code&gt;, &lt;code&gt;${USERAGENT}&lt;/code&gt;, etc. For a complete list, refer to the command line &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/command-line-interface.html#-p---screenshot-path-pattern&quot;&gt;--screenshot-path-pattern flag description&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You specify a screenshot path pattern when you run tests. Each time TestCafe takes a screenshot, it substitutes the placeholders with actual values and saves the screenshot to the resulting path.&lt;/p&gt;

&lt;p&gt;The following example shows how to specify a screenshot path pattern through the command line:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;testcafe all test.js -s screenshots -p &lt;span class=&quot;s1&quot;&gt;'${DATE}_${TIME}/test-${TEST_INDEX}/${USERAGENT}/${FILE_INDEX}.png'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you use a programming API, pass the screenshot path pattern to the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/programming-interface/runner.html#screenshots&quot;&gt;runner.screenshots method&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;runner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;screenshots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'reports/screenshots/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'${TEST_INDEX}/${OS}/${BROWSER}-v${BROWSER_VERSION}/${FILE_INDEX}.png'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;add-info-about-screenshots-and-quarantine-attempts-to-custom-reports-2216&quot;&gt;&lt;/a&gt;⚙ Add Info About Screenshots and Quarantine Attempts to Custom Reports (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2216&quot;&gt;#2216&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#add-info-about-screenshots-and-quarantine-attempts-to-custom-reports-2216&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Custom reporters can now access screenshots&amp;#39; data and the history of quarantine attempts (if the test run in the quarantine mode).&lt;/p&gt;

&lt;p&gt;The following information about screenshots is now available:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the path to the screenshot file,&lt;/li&gt;
&lt;li&gt;the path to the thumbnail image,&lt;/li&gt;
&lt;li&gt;the user agent of the browser in which the screenshot was taken,&lt;/li&gt;
&lt;li&gt;the quarantine attempt number (if the screenshot was taken in the quarantine mode),&lt;/li&gt;
&lt;li&gt;whether the screenshot was taken because the test failed.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If the test was run in the quarantine mode, you can also determine which attempts failed and passed.&lt;/p&gt;

&lt;p&gt;Refer to the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/extending-testcafe/reporter-plugin/reporter-methods.html#reporttestdone&quot;&gt;reportTestDone method description&lt;/a&gt; for details on how to access this information.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;bug-fixes&quot;&gt;&lt;/a&gt;Bug Fixes &lt;a class=&quot;permalink&quot; href=&quot;#bug-fixes&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;HTML5 drag events are no longer simulated if &lt;code&gt;event.preventDefault&lt;/code&gt; is called for the &lt;code&gt;mousedown&lt;/code&gt; event (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2529&quot;&gt;#2529&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;File upload no longer causes an exception when there are several file inputs on the page (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2642&quot;&gt;#2642&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;File upload now works with inputs that have the &lt;code&gt;required&lt;/code&gt; attribute (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2509&quot;&gt;#2509&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;load&lt;/code&gt; event listener is no longer triggered when added to an image (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1688&quot;&gt;testcafe-hammerhead/#1688&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 02 Aug 2018 00:00:00 +0300</pubDate>
        <link>http://devexpress.github.io/testcafe/blog/testcafe-v0-21-0-released.html</link>
        <guid isPermaLink="true">http://devexpress.github.io/testcafe/blog/testcafe-v0-21-0-released.html</guid>
        
        
      </item>
    
      <item>
        <title>TestCafe v0.20.0 Released</title>
        <description>&lt;h1&gt;TestCafe v0.20.0 Released&lt;/h1&gt;
&lt;p&gt;Intercepting HTTP requests, specifying resources accessed by bypassing a proxy server, specifying testing metadata, deprecated passing a regular promise to assertions.&lt;/p&gt;

&lt;!--more--&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;request-hooks-intercepting-http-requests-1341&quot;&gt;&lt;/a&gt;Request Hooks: Intercepting HTTP requests (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1341&quot;&gt;#1341&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#request-hooks-intercepting-http-requests-1341&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;TestCafe now allows you to record HTTP request data or mock responses. You can also create a custom HTTP request hook to emulate authentications like  &lt;strong&gt;Kerberos&lt;/strong&gt; or &lt;strong&gt;Client Certificate Authentication&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;See &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/test-api/intercepting-http-requests&quot;&gt;Intercepting HTTP Requests&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;enhancements&quot;&gt;&lt;/a&gt;Enhancements &lt;a class=&quot;permalink&quot; href=&quot;#enhancements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;specifying-resources-accessed-by-bypassing-a-proxy-server-1791&quot;&gt;&lt;/a&gt;⚙ Specifying resources accessed by bypassing a proxy server (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1791&quot;&gt;#1791&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#specifying-resources-accessed-by-bypassing-a-proxy-server-1791&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;TestCafe now allows you to bypass the proxy server when accessing specific resources.&lt;/p&gt;

&lt;p&gt;To specify resources that require direct access, use the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/command-line-interface.html#--proxy-bypass-rules&quot;&gt;--proxy-bypass&lt;/a&gt; flag in the command line or the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/programming-interface/runner.html#useproxy&quot;&gt;useProxy&lt;/a&gt; API method&amp;#39;s parameters.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;testcafe chrome my-tests/&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.js --proxy proxy.corp.mycompany.com --proxy-bypass localhost:8080,internal-resource.corp.mycompany.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;runner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;useProxy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'172.0.10.10:8080'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'localhost:8080'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'internal-resource.corp.mycompany.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;specifying-testing-metadata-2242&quot;&gt;&lt;/a&gt;⚙ Specifying testing metadata (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2242&quot;&gt;#2242&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#specifying-testing-metadata-2242&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;TestCafe allows you to specify additional information for tests in the form of key-value metadata and use it in reports.&lt;/p&gt;

&lt;p&gt;You can define metadata for a fixture or a test using the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/test-api/test-code-structure.html#specifying-testing-metadata&quot;&gt;meta&lt;/a&gt; method:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;fixture&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;My&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Fixture&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;meta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fixtureID'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'f-0001'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;meta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'John'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;creationDate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'05/03/2018'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;meta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'testID'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'t-0005'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;meta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;severity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'critical'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;testedAPIVersion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'1.0'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'MyTest'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* ... */&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To include testing metadata to reports, use the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/extending-testcafe/reporter-plugin/reporter-methods.html&quot;&gt;custom reporter methods&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;passing-a-regular-promise-to-texpect-is-deprecated-now-2207&quot;&gt;&lt;/a&gt;⚙ Passing a regular promise to &lt;code&gt;t.expect&lt;/code&gt; is deprecated now (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2207&quot;&gt;#2207&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#passing-a-regular-promise-to-texpect-is-deprecated-now-2207&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;TestCafe now throws an error if you pass a regular promise to the assertion&amp;#39;s &lt;code&gt;expect&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;If you need to assert a regular promise, set the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/test-api/assertions/#optionsallowunawaitedpromise&quot;&gt;allowUnawaitedPromise&lt;/a&gt; option to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;doSomethingAsync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'check that a promise is returned'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;allowUnawaitedPromise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;bug-fixes&quot;&gt;&lt;/a&gt;Bug Fixes &lt;a class=&quot;permalink&quot; href=&quot;#bug-fixes&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The session recovery bubble in Firefox is disabled (&lt;a href=&quot;https://github.com/DevExpress/testcafe/pull/2341&quot;&gt;#2341&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;TestCafe works properly if a &lt;code&gt;body&lt;/code&gt; element has the &lt;code&gt;pointer-events: none;&lt;/code&gt; css style rule (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2251&quot;&gt;#2251&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Resizing Chrome in the emulation mode works correctly (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2154&quot;&gt;#2154&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The location port is used for service messages (&lt;a href=&quot;https://github.com/DevExpress/testcafe/pull/2308&quot;&gt;#2308&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;A browser instance shuts down correctly on Unix systems (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2226&quot;&gt;#2226&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;An &lt;code&gt;Integrity&lt;/code&gt; attribute is removed from &lt;code&gt;script&lt;/code&gt; and &lt;code&gt;link&lt;/code&gt; tags (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/235&quot;&gt;testcafe-hammerhead/#235&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;event.preventDefault()&lt;/code&gt; method call changes the &lt;code&gt;event.defaultPrevented&lt;/code&gt; property value (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1588&quot;&gt;testcafe-hammerhead/#1588&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;It is possible to set the &lt;code&gt;meta&lt;/code&gt; element&amp;#39;s &lt;code&gt;content&lt;/code&gt; attribute (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1586&quot;&gt;testcafe-hammerhead/#1586&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;TestCafe no longer overrides attributes used in a non-standard way with &lt;code&gt;null&lt;/code&gt; (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/pull/1583&quot;&gt;testcafe-hammerhead/#1583&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;Change&lt;/code&gt; event fires correctly if the &lt;code&gt;target.value&lt;/code&gt; changes (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2319&quot;&gt;#2319&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MouseEvent.screenX&lt;/code&gt; and &lt;code&gt;MouseEvent.screenY&lt;/code&gt; are added to the emulated events (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2325&quot;&gt;#2325&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Cookies on &lt;code&gt;localhost&lt;/code&gt; are processed correctly (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1491&quot;&gt;testcafe-hammerhead/#1491&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Setting the &lt;code&gt;//&lt;/code&gt; url for an image works correctly (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2312&quot;&gt;#2312&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;shadowUI&lt;/code&gt; internal elements are no longer processed (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2281&quot;&gt;#2281&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;typeInput&lt;/code&gt; event is raised correctly (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1956&quot;&gt;#1956&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Selecting text in contenteditable elements works properly (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2301&quot;&gt;#2301&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 15 May 2018 00:00:00 +0300</pubDate>
        <link>http://devexpress.github.io/testcafe/blog/testcafe-v0-20-0-released.html</link>
        <guid isPermaLink="true">http://devexpress.github.io/testcafe/blog/testcafe-v0-20-0-released.html</guid>
        
        
      </item>
    
      <item>
        <title>TestCafe v0.19.0 Released - Rapid Test Development Tool, Screenshots of Page Elements, etc</title>
        <description>&lt;h1&gt;TestCafe v0.19.0 Released - Rapid Test Development Tool, Screenshots of Page Elements, etc&lt;/h1&gt;
&lt;p&gt;Welcome TestCafe Live, a tool for rapid test development. We have also added a couple of new features like taking screenshots of individual page elements and filtering visible and hidden elements in the selector chain.&lt;/p&gt;

&lt;!--more--&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;testcafe-live-see-instant-feedback-when-working-on-tests-1624&quot;&gt;&lt;/a&gt;TestCafe Live: See instant feedback when working on tests (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1624&quot;&gt;#1624&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#testcafe-live-see-instant-feedback-when-working-on-tests-1624&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;TestCafe Live provides a service that keeps the TestCafe process and browsers opened the whole time you are working on tests. Changes you make in code immediately restart the tests. That is, TestCafe Live allows you to see test results instantly.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=RWQtB6Xv01Q&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/DevExpress/testcafe/master/media/changelog/testcafe-live-video.png&quot; alt=&quot;TestCafe Live Video&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For more information, see &lt;a href=&quot;https://github.com/DevExpress/testcafe-live&quot;&gt;the TestCafe Live repository&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;enhancements&quot;&gt;&lt;/a&gt;Enhancements &lt;a class=&quot;permalink&quot; href=&quot;#enhancements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;taking-screenshots-of-individual-page-elements-1496&quot;&gt;&lt;/a&gt;⚙ Taking Screenshots of Individual Page Elements (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1496&quot;&gt;#1496&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#taking-screenshots-of-individual-page-elements-1496&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We have added the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/test-api/actions/take-screenshot.html#take-a-screenshot-of-a-page-element&quot;&gt;t.takeElementScreenshot&lt;/a&gt; action that allows you to take a screenshot of an individual page element.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Selector&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'testcafe'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;fixture&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;My&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fixture&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//devexpress.github.io/testcafe/example/`;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Take a screenshot of a fieldset'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'#reusing-js-code'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'#continuous-integration-embedding'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;takeElementScreenshot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fieldset'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'my-fixture/important-features.png'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This action provides additional customization that allows you to position the center of the screenshot or crop it. For more information, see the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/test-api/actions/take-screenshot.html#take-a-screenshot-of-a-page-element&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Note that if the screenshot directory is not specified with the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/programming-interface/runner.html#screenshots&quot;&gt;runner.screenshots&lt;/a&gt; API method or the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/command-line-interface.html#-s-path---screenshots-path&quot;&gt;screenshots&lt;/a&gt; command line option, the &lt;code&gt;t.takeElementScreenshot&lt;/code&gt; action will be ignored.&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;filtering-elements-by-their-visibility-1018&quot;&gt;&lt;/a&gt;⚙ Filtering Elements by Their Visibility (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1018&quot;&gt;#1018&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#filtering-elements-by-their-visibility-1018&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can now filter the selector&amp;#39;s matching set to leave only visible or hidden elements. To do this, use the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/test-api/selecting-page-elements/selectors/functional-style-selectors.html#filtervisible&quot;&gt;filterVisible&lt;/a&gt; and &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/test-api/selecting-page-elements/selectors/functional-style-selectors.html#filterhidden&quot;&gt;filterHidden&lt;/a&gt; methods.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Selector&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'testcafe'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;fixture&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;My&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fixture&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//devexpress.github.io/testcafe/example/`;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Filter visible and hidden elements'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;inputs&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'input'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hiddenInput&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;inputs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filterHidden&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;visibleInputs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;inputs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filterVisible&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hiddenInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;eql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;visibleInputs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;eql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;finding-elements-by-the-exact-matching-text-1292&quot;&gt;&lt;/a&gt;⚙ Finding Elements by the Exact Matching Text (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1292&quot;&gt;#1292&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#finding-elements-by-the-exact-matching-text-1292&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The current selector&amp;#39;s &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/test-api/selecting-page-elements/selectors/functional-style-selectors.html#withtext&quot;&gt;withText&lt;/a&gt; method looks for elements whose text content &lt;em&gt;contains&lt;/em&gt; the specified string. With this release, we have added the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/test-api/selecting-page-elements/selectors/functional-style-selectors.html#withexacttext&quot;&gt;withExactText&lt;/a&gt; method that performs search by &lt;em&gt;strict match&lt;/em&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Selector&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'testcafe'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;fixture&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;My&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fixture&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//devexpress.github.io/testcafe/example/`;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Search by exact text'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;labels&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'label'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;winLabel&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;withExactText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Windows'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reusingLabel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;withText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'JavaScript'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;winLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reusingLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;using-decorators-in-typescript-code-2117-by-pietrovich&quot;&gt;&lt;/a&gt;⚙ Using Decorators in TypeScript Code (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2117&quot;&gt;#2117&lt;/a&gt;) by &lt;a href=&quot;https://github.com/pietrovich&quot;&gt;@pietrovich&lt;/a&gt; &lt;a class=&quot;permalink&quot; href=&quot;#using-decorators-in-typescript-code-2117-by-pietrovich&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;TestCafe now allows you to use &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/decorators.html&quot;&gt;decorators&lt;/a&gt; when &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/test-api/typescript-support.html&quot;&gt;writing tests in TypeScript&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Note that decorators are still an experimental feature in TypeScript.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;bug-fixes&quot;&gt;&lt;/a&gt;Bug Fixes &lt;a class=&quot;permalink&quot; href=&quot;#bug-fixes&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;TestCafe can now scroll a webpage when &lt;code&gt;body&lt;/code&gt; has a scroll bar (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1940&quot;&gt;#1940&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Firefox no longer hangs with a dialog asking to set it as the default browser (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1926&quot;&gt;#1926&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Legacy API no longer freezes because of an unexpected error (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1790&quot;&gt;#1790&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Click on an element that was hidden and then recreated on timeout now works correctly (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1994&quot;&gt;#1994&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;TestCafe now correctly finds browsers in headless mode on macOS when tests are executing concurrently (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2035&quot;&gt;#2035&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;When roles are switched using the &lt;code&gt;preserverUrl&lt;/code&gt; flag, the local storage now restores correctly (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2015&quot;&gt;#2015&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;TestCafe progress bar is no longer visible on screenshots (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2076&quot;&gt;#2076&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Window manipulations now wait for page loading (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2000&quot;&gt;#2000&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;All toolbars are now hidden when taking screenshots (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1445&quot;&gt;#1445&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;TestCafe now works normally with the latest version of CucumberJS (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2107&quot;&gt;#2107&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fixed an error connected to file permissions on Ubuntu (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2144&quot;&gt;#2144&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Browser manipulations can now be executed step-by-step (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2150&quot;&gt;#2150&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fixed a bug where a page wouldn&amp;#39;t load because of an error in &lt;code&gt;generateCallExpression&lt;/code&gt; (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1389&quot;&gt;testcafe-hammerhead/#1389&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Now the overridden Blob constructor doesn&amp;#39;t process data unnecessarily (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1359&quot;&gt;testcafe-hammerhead/#1359&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Now the &lt;code&gt;target&lt;/code&gt; attribute is not set for a button after a click on it (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1437&quot;&gt;testcafe-hammerhead/#1437&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;sandbox&lt;/code&gt;, &lt;code&gt;target&lt;/code&gt; and &lt;code&gt;style&lt;/code&gt; attributes are now cleaned up (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1448&quot;&gt;testcafe-hammerhead/#1448&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;A &lt;code&gt;RangeError&lt;/code&gt; with the message &lt;code&gt;Maximum call stack size exceeded&lt;/code&gt; is no longer raised (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1452&quot;&gt;testcafe-hammerhead/#1452&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;A script error is no longer raised on pages that contain a &lt;code&gt;beforeunload&lt;/code&gt; handler (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1419&quot;&gt;testcafe-hammerhead/#1419&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fixed wrong overridding of an event object (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1445&quot;&gt;testcafe-hammerhead/#1445&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Illegal invocation error is no longer raised when calling the &lt;code&gt;FileListWrapper.item&lt;/code&gt; method (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1446&quot;&gt;testcafe-hammerhead/#1446&lt;/a&gt;) by &lt;a href=&quot;https://github.com/javiercbk&quot;&gt;@javiercbk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A script error is no longer raised when &lt;code&gt;Node.nextSibling&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1469&quot;&gt;testcafe-hammerhead/#1469&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;isShadowUIElement&lt;/code&gt; check is now performed for &lt;code&gt;Node.nextSibling&lt;/code&gt; when a node is not an element (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1465&quot;&gt;testcafe-hammerhead/#1465&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;toString&lt;/code&gt; function is now overridden for anchor elements (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1483&quot;&gt;testcafe-hammerhead/#1483&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 01 Mar 2018 00:00:00 +0300</pubDate>
        <link>http://devexpress.github.io/testcafe/blog/testcafe-v0-19-0-released.html</link>
        <guid isPermaLink="true">http://devexpress.github.io/testcafe/blog/testcafe-v0-19-0-released.html</guid>
        
        
      </item>
    
      <item>
        <title>TestCafe v0.18.0 Released - Angular Selectors, Using Multiple Reporters, etc</title>
        <description>&lt;h1&gt;TestCafe v0.18.0 Released: Angular Selectors, Using Multiple Reporters, etc&lt;/h1&gt;
&lt;p&gt;With this release, we have prepared a bunch of useful things. We have put finishing touches on Angular selectors to let you address page elements on Angular websites using the component tree. We have also made it possible to output reports to multiple channels (like console + file). Read on to learn about more things we have for you.&lt;/p&gt;

&lt;!--more--&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;enhancements&quot;&gt;&lt;/a&gt;Enhancements &lt;a class=&quot;permalink&quot; href=&quot;#enhancements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;angular-selectors-testcafe-angular-selectors&quot;&gt;&lt;/a&gt;⚙ Angular Selectors (&lt;a href=&quot;https://github.com/DevExpress/testcafe-angular-selectors&quot;&gt;testcafe-angular-selectors&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#angular-selectors-testcafe-angular-selectors&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In addition to AngularJS selectors we shipped earlier, we have prepared selectors for Angular 2+ websites.&lt;/p&gt;

&lt;p&gt;They are included in the same &lt;code&gt;testcafe-angular-selectors&lt;/code&gt; module.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;npm install testcafe-angular-selectors
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can use Angular 2+ selectors as regular TestCafe selectors. When creating such a selector, provide the component name to the &lt;code&gt;AngularSelector&lt;/code&gt; constructor. You can pass nested component names as well.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AngularSelector&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'testcafe-angular-selectors'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;listItemComponent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AngularSelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'list list-item'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that before starting a test, you need to wait until the component tree is loaded. Use the &lt;code&gt;waitForAngular&lt;/code&gt; function for this.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AngularSelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;waitForAngular&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'testcafe-angular-selectors'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;fixture&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tests&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//angular-app-url`&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;beforeEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;waitForAngular&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'test'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firstListItem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AngularSelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'list list-item'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For details, see &lt;a href=&quot;https://github.com/DevExpress/testcafe-angular-selectors/blob/master/angular-selector.md&quot;&gt;Angular Selector Extentions&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;testing-in-headless-firefox&quot;&gt;&lt;/a&gt;⚙ Testing in headless Firefox &lt;a class=&quot;permalink&quot; href=&quot;#testing-in-headless-firefox&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In addition to Chrome headless, we have added support for testing in &lt;a href=&quot;https://developer.mozilla.org/en-US/Firefox/Headless_mode&quot;&gt;headless&lt;/a&gt; Firefox (version 56+).&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;testcafe firefox:headless tests/sample-fixture.js
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;runner&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tests/sample-fixture.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;browsers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'firefox:headless'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;outputting-test-results-to-multiple-channels-1412&quot;&gt;&lt;/a&gt;⚙ Outputting test results to multiple channels (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1412&quot;&gt;#1412&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#outputting-test-results-to-multiple-channels-1412&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If you need a report to be printed in the console and saved to a &lt;code&gt;.json&lt;/code&gt; file,
you can now do this by specifying multiple reporters when running tests.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;testcafe all tests/sample-fixture.js -r spec,json:report.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createWriteStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'report.json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;runner&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tests/sample-fixture.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;browsers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'chrome'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reporter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'spec'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reporter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;failedCount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;entering-the-debug-mode-when-a-test-fails-1608&quot;&gt;&lt;/a&gt;⚙ Entering the debug mode when a test fails (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1608&quot;&gt;#1608&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#entering-the-debug-mode-when-a-test-fails-1608&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;TestCafe can now automatically switch to the debug mode whenever a test fails. Test execution will be paused, so that you can explore the tested page to determine the cause of the fail.&lt;/p&gt;

&lt;p&gt;To enable this behavior, use the &lt;code&gt;--debug-on-fail&lt;/code&gt; flag in the command line or the &lt;code&gt;debugOnFail&lt;/code&gt; option in the API.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;testcafe chrome tests/fixture.js --debug-on-fail
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;runner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;debugOnFail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;interacting-with-the-tested-page-in-debug-mode-1848&quot;&gt;&lt;/a&gt;⚙ Interacting with the tested page in debug mode (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1848&quot;&gt;#1848&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#interacting-with-the-tested-page-in-debug-mode-1848&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;When debugging your tests, you can now interact with the tested page. Click the &lt;strong&gt;Unlock page&lt;/strong&gt; button in the page footer to enable interaction.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/unlock-page-button.png&quot; alt=&quot;Unlock page button&quot;&gt;&lt;/p&gt;

&lt;p&gt;After that, you can do anything with the webpage. This gives you additional powers to detect problems in your tests.&lt;/p&gt;

&lt;p&gt;Click &lt;strong&gt;Resume&lt;/strong&gt; to continue running the test or click &lt;strong&gt;Next Step&lt;/strong&gt; to step over.&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;chrome-and-firefox-are-opened-with-clean-profiles-by-default-1623&quot;&gt;&lt;/a&gt;⚙ Chrome and Firefox are opened with clean profiles by default (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1623&quot;&gt;#1623&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#chrome-and-firefox-are-opened-with-clean-profiles-by-default-1623&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;TestCafe now opens Chrome and Firefox with empty profiles to eliminate the influence of profile settings and extensions on test running.&lt;/p&gt;

&lt;p&gt;However, you can &lt;strong&gt;return to the previous behavior&lt;/strong&gt; by using the &lt;code&gt;:userProfile&lt;/code&gt; browser option.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;testcafe firefox:userProfile tests/test.js
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;runner&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tests/fixture1.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;browsers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'firefox:userProfile'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;customizable-timeout-to-wait-for-the-windowload-event-1645&quot;&gt;&lt;/a&gt;⚙ Customizable timeout to wait for the &lt;code&gt;window.load&lt;/code&gt; event (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1645&quot;&gt;#1645&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#customizable-timeout-to-wait-for-the-windowload-event-1645&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Previously, TestCafe started a test when the &lt;code&gt;DOMContentLoaded&lt;/code&gt; event was raised. However, there are many pages that execute some kind of initialization code on the &lt;code&gt;window.load&lt;/code&gt; event (which is raised after &lt;code&gt;DOMContentLoaded&lt;/code&gt; because it waits for all stylesheets, images and subframes to load). In this instance, you need to wait for the &lt;code&gt;window.load&lt;/code&gt; event to fire before running tests.&lt;/p&gt;

&lt;p&gt;With this release, TestCafe waits for the &lt;code&gt;window.load&lt;/code&gt; event for &lt;code&gt;3&lt;/code&gt; seconds.
We have also added a &lt;code&gt;pageLoadTimeout&lt;/code&gt; setting that allows you to customize this interval.
You can set it to &lt;code&gt;0&lt;/code&gt; to skip waiting for &lt;code&gt;window.load&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The following examples show how to use the &lt;code&gt;pageLoadTimeout&lt;/code&gt; setting from the command line and API.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;testcafe chrome test.js --page-load-timeout 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;runner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;pageLoadTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also use the &lt;code&gt;setPageLoadTimeout&lt;/code&gt; method in test API to set the timeout for an individual test.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;fixture&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Page&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;load&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;timeout&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//devexpress.github.io/testcafe/example/`;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Page&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;load&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;timeout&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setPageLoadTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;navigateTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'http://devexpress.github.io/testcafe/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;access-messages-output-by-the-tested-app-to-the-browser-console-1738&quot;&gt;&lt;/a&gt;⚙ Access messages output by the tested app to the browser console (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1738&quot;&gt;#1738&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#access-messages-output-by-the-tested-app-to-the-browser-console-1738&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can now obtain messages that the tested app outputs to the browser console. This is useful if your application or the framework it uses posts errors, warnings or other informative messages into the console.&lt;/p&gt;

&lt;p&gt;Use the &lt;code&gt;t.getBrowserConsoleMessages&lt;/code&gt; method that returns the following object.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Cannot access the 'db' database. Wrong credentials.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'...'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// error messages&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;warn&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'The setTimeout property is deprecated'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'...'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;                &lt;span class=&quot;c1&quot;&gt;// warning messages&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'[09:12:08] Logged in'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'[09:25:43] Changes saved'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'...'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;// log messages&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'The application was updated since your last visit.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'...'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// info messages&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that this method returns only messages posted via the &lt;code&gt;console.error&lt;/code&gt;, &lt;code&gt;console.warn&lt;/code&gt;, &lt;code&gt;console.log&lt;/code&gt; and &lt;code&gt;console.info&lt;/code&gt; methods. Messages output by the browser (like when an unhandled exception occurs on the page) will not be returned.&lt;/p&gt;

&lt;p&gt;For instance, consider the React&amp;#39;s typechecking feature, &lt;a href=&quot;https://reactjs.org/docs/typechecking-with-proptypes.html&quot;&gt;PropTypes&lt;/a&gt;. You can use it to check that you assign valid values to the component&amp;#39;s props. If a &lt;code&gt;PropTypes&lt;/code&gt; rule is violated, React posts an error into the JavaScript console.&lt;/p&gt;

&lt;p&gt;The following example shows how to check the React prop types for errors using the &lt;code&gt;t.getBrowserConsoleMessages&lt;/code&gt; method.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// check-prop-types.js&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'testcafe'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getBrowserConsoleMessages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;notOk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// test.js&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Selector&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'testcafe'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;checkPropTypes&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./check-prop-types'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;fixture&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;react&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;example&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//localhost:8080/`  // https://github.com/mzabriskie/react-example&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;afterEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;checkPropTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'test'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;typeText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'.form-control'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'devexpress'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'button'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;withText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Go'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'h4'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;withText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Organizations'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;defining-drag-end-point-on-the-destination-element-982&quot;&gt;&lt;/a&gt;⚙ Defining drag end point on the destination element (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/982&quot;&gt;#982&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#defining-drag-end-point-on-the-destination-element-982&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;t.dragToElement&lt;/code&gt; action can now drop a dragged element at any point inside the destination element.
You can specify the target point using the &lt;code&gt;destinationOffsetX&lt;/code&gt; and &lt;code&gt;destinationOffsetY&lt;/code&gt; options.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Selector&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'testcafe'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fileIcon&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'.file-icon'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;directoryPane&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'.directory'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;fixture&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;My&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Fixture&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//example.com/`;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'My Test'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dragToElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fileIcon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;directoryPane&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;offsetX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;offsetY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;destinationOffsetX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;destinationOffsetY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;modifiers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;shift&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;testcafe-exits-gracefully-when-the-process-is-interrupted-1378&quot;&gt;&lt;/a&gt;⚙ TestCafe exits gracefully when the process is interrupted (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1378&quot;&gt;#1378&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#testcafe-exits-gracefully-when-the-process-is-interrupted-1378&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Previously, TestCafe left browsers open when you exited the process by pressing &lt;code&gt;Ctrl+C&lt;/code&gt; in the terminal.
Now TestCafe exits gracefully closing all browsers opened for testing.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;bug-fixes&quot;&gt;&lt;/a&gt;Bug Fixes &lt;a class=&quot;permalink&quot; href=&quot;#bug-fixes&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Tests no longer hang in Nightmare (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1493&quot;&gt;#1493&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;focus&lt;/code&gt; event is now raised when clicking links with &lt;code&gt;tabIndex=&amp;quot;0&amp;quot;&lt;/code&gt; (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1803&quot;&gt;#1803&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Headless Chrome processes no longer hang after test runs (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1826&quot;&gt;#1826&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setFilesToUpload&lt;/code&gt; no longer throws a &lt;code&gt;RangeError&lt;/code&gt; on websites that use Angular (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1731&quot;&gt;#1731&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fixed a bug where an &lt;code&gt;iframe&lt;/code&gt; got wrong origin (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1753&quot;&gt;#1753&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;document.open&lt;/code&gt; now doesn&amp;#39;t throw an error if &lt;code&gt;document.defaultView&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1272&quot;&gt;testcafe-hammerhead/#1272&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;No error is thrown when the handler passed to &lt;code&gt;addEventListener&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt; (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1251&quot;&gt;testcafe-hammerhead/#1251&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;An error is no longer raised if the processed element is not extendible (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1300&quot;&gt;testcafe-hammerhead/#1300&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fixed a bug where an &lt;code&gt;onclick&lt;/code&gt; handler did not work after click on a &lt;code&gt;Submit&lt;/code&gt; button (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1291&quot;&gt;testcafe-hammerhead/#1291&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Images with &lt;code&gt;style = background-image: url(&amp;quot;img.png&amp;quot;);&lt;/code&gt; are now loaded correctly (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1212&quot;&gt;testcafe-hammerhead/#1212&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Documents can now contain two &lt;code&gt;ShadowUI&lt;/code&gt; roots (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1246&quot;&gt;testcafe-hammerhead/#1246&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;HTML in an overridden &lt;code&gt;document.write&lt;/code&gt; function is now processed correctly (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1311&quot;&gt;testcafe-hammerhead/#1311&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Elements processing now works for a &lt;code&gt;documentFragment&lt;/code&gt; as it is added to the DOM (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1334&quot;&gt;testcafe-hammerhead/#1334&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 10 Oct 2017 00:00:00 +0300</pubDate>
        <link>http://devexpress.github.io/testcafe/blog/testcafe-v0-18-0-released.html</link>
        <guid isPermaLink="true">http://devexpress.github.io/testcafe/blog/testcafe-v0-18-0-released.html</guid>
        
        
      </item>
    
      <item>
        <title>TestCafe v0.18.0-alpha1 Released - Testing in headless Firefox</title>
        <description>&lt;h1&gt;TestCafe v0.18.0-alpha1 Released: Testing in headless Firefox&lt;/h1&gt;
&lt;p&gt;This early release supports headless mode in Firefox v56.0 which was launched on September 28th.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;To run your tests in headless mode, use the following command:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;testcafe firefox:headless test.js
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A major release of TestCafe v0.18.0 with a bunch of new features is coming soon.&lt;/p&gt;
</description>
        <pubDate>Fri, 29 Sep 2017 00:00:00 +0300</pubDate>
        <link>http://devexpress.github.io/testcafe/blog/testcafe-v0-18-0-alpha1-released.html</link>
        <guid isPermaLink="true">http://devexpress.github.io/testcafe/blog/testcafe-v0-18-0-alpha1-released.html</guid>
        
        
      </item>
    
      <item>
        <title>TestCafe v0.17.0 Released</title>
        <description>&lt;h1&gt;TestCafe v0.17.0 Released: Testing Electron Apps and Concurrent Test Execution&lt;/h1&gt;
&lt;p&gt;With this release, we have prepared a bunch of new features. Two big news are the Electron browser provider and concurrent test execution.&lt;/p&gt;

&lt;p&gt;Read on to learn more.&lt;/p&gt;

&lt;!--more--&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;enhancements&quot;&gt;&lt;/a&gt;Enhancements &lt;a class=&quot;permalink&quot; href=&quot;#enhancements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;testing-electron-applications-testcafe-browser-provider-electron&quot;&gt;&lt;/a&gt;⚙ Testing Electron applications (&lt;a href=&quot;https://github.com/DevExpress/testcafe-browser-provider-electron&quot;&gt;testcafe-browser-provider-electron&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#testing-electron-applications-testcafe-browser-provider-electron&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We have created a browser provider that allows you to test Electron applications with TestCafe.&lt;/p&gt;

&lt;p&gt;Getting it to work is simple. First, install the browser provider plugin from npm.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;npm install testcafe-browser-provider-electron
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We assume that you have a JavaScript application that you wish to run in Electron.&lt;/p&gt;

&lt;p&gt;Create a &lt;code&gt;.testcafe-electron-rc&lt;/code&gt; file that contains configurations for the Electron plugin.
The only required setting here is &lt;code&gt;mainWindowUrl&lt;/code&gt;. It&amp;#39;s a URL (or path) to the main window page relative to the application directory.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;mainWindowUrl&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;./index.html&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Place this file into the application root directory.&lt;/p&gt;

&lt;p&gt;At the next step, install the Electron module.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;npm install electron@latest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now you are ready to run tests. Specify the &lt;code&gt;electron&lt;/code&gt; browser name and the application path
at the test launch.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;testcafe &lt;span class=&quot;s2&quot;&gt;&quot;electron:/home/user/electron-app&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;path/to/test/file.js&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;testCafe&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createRunner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'path/to/test/file.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;browsers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'electron:/home/user/electron-app'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To learn more about the Electron browser provider, see the plugin &lt;a href=&quot;https://github.com/DevExpress/testcafe-browser-provider-electron&quot;&gt;readme&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;concurrent-test-execution-1165&quot;&gt;&lt;/a&gt;⚙ Concurrent test execution (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1165&quot;&gt;#1165&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#concurrent-test-execution-1165&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We&amp;#39;ve added concurrent test launch. This makes a test batch complete faster.&lt;/p&gt;

&lt;p&gt;By default TestCafe launches one instance of each specified browser. Tests run one by one in each of them.&lt;/p&gt;

&lt;p&gt;Enable &lt;em&gt;concurrency&lt;/em&gt; and TestCafe will launch multiple instances of each browser. It will distribute the test batch among them. The tests will run in parallel.&lt;/p&gt;

&lt;p&gt;To enable concurrency, add &lt;code&gt;-c&lt;/code&gt;in the command line. Or use the &lt;code&gt;runner.concurrency()&lt;/code&gt; API method.
Specify the number of instances to invoke for each browser.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;testcafe&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;chrome&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;js&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;testRunPromise&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;runner&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tests/test.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;browsers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'chrome'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;concurrency&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For details, see &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/common-concepts/concurrent-test-execution.html&quot;&gt;Concurrent Test Execution&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;output-test-run-reports-to-slack-and-teamcity-testcafe-reporter-slack-testcafe-reporter-teamcity&quot;&gt;&lt;/a&gt;⚙ Output test run reports to Slack and TeamCity (&lt;a href=&quot;https://github.com/Shafied/testcafe-reporter-slack&quot;&gt;testcafe-reporter-slack&lt;/a&gt;, &lt;a href=&quot;https://github.com/Soluto/testcafe-reporter-teamcity&quot;&gt;testcafe-reporter-teamcity&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#output-test-run-reports-to-slack-and-teamcity-testcafe-reporter-slack-testcafe-reporter-teamcity&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/Shafied&quot;&gt;@Shafied&lt;/a&gt; and &lt;a href=&quot;https://github.com/nirsky&quot;&gt;@nirsky&lt;/a&gt;, TestCafe ecosystem has gained two new reporter plugins.&lt;/p&gt;

&lt;p&gt;The Slack reporter allows you to create a chat bot that posts test run results to a Slack channel.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/testcafe-slack-reporter.png&quot; alt=&quot;Slack Reporter&quot;&gt;&lt;/p&gt;

&lt;p&gt;The TeamCity reporter enables you to display reports inside the TeamCity UI.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/testcafe-reporter-teamcity.png&quot; alt=&quot;TeamCity Reporter&quot;&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;further-improvements-in-automatic-waiting-mechanism-1521&quot;&gt;&lt;/a&gt;⚙ Further improvements in automatic waiting mechanism (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1521&quot;&gt;#1521&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#further-improvements-in-automatic-waiting-mechanism-1521&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We have enhanced the waiting mechanism behavior in certain scenarios where you still used to need &lt;code&gt;wait&lt;/code&gt; actions.
Now automatic waiting is much smarter and chances that you need to wait manually are diminished.&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;user-roles-preserve-the-local-storage-1454&quot;&gt;&lt;/a&gt;⚙ User roles preserve the local storage (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1454&quot;&gt;#1454&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#user-roles-preserve-the-local-storage-1454&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;TestCafe now saves the local storage state when switching between roles. You get the same local storage content you left when you switch back.&lt;/p&gt;

&lt;p&gt;This is useful for testing websites that perform authentication via local storage instead of cookies.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;bug-fixes&quot;&gt;&lt;/a&gt;Bug Fixes &lt;a class=&quot;permalink&quot; href=&quot;#bug-fixes&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Selector&amp;#39;s &lt;code&gt;withAttribute&lt;/code&gt; method supports search by strict match (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1548&quot;&gt;#1548&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Description for the &lt;code&gt;path&lt;/code&gt; parameter of the &lt;code&gt;t.takeScreenshot&lt;/code&gt; action has been corrected (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1515&quot;&gt;#1515&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Local storage is now cleaned appropriately after the test run.(&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1546&quot;&gt;#1546&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;TestCafe now checks element visibility with a timeout when the target element&amp;#39;s &lt;code&gt;style.top&lt;/code&gt; is negative (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1185&quot;&gt;#1185&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fetching an absolute CORS URL now works correctly. (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1629&quot;&gt;#1629&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add partial support for proxying live node collections (the &lt;code&gt;GetElementsByTagName&lt;/code&gt; method) (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1442&quot;&gt;#1442&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;TypeScript performance has been enhanced. (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1591&quot;&gt;#1591&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The right port is now applied to a cross-domain iframe location after redirect. (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1191&quot;&gt;testcafe-hammerhead/#1191&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;All internal properties are marked as non-enumerable. (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1182&quot;&gt;testcafe-hammerhead/#1182&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Support proxying pages with defined referrer policy. (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1195&quot;&gt;testcafe-hammerhead/#1195&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;WebWorker content is now correctly proxied in FireFox 54. (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1216&quot;&gt;testcafe-hammerhead/#1216&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Code instrumentation for the &lt;code&gt;document.activeElement&lt;/code&gt; property works properly if it is &lt;code&gt;null&lt;/code&gt;. (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1226&quot;&gt;testcafe-hammerhead/#1226&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;length&lt;/code&gt;, &lt;code&gt;item&lt;/code&gt; and &lt;code&gt;namedItem&lt;/code&gt; are no longer own properties of &lt;code&gt;LiveNodeListWrapper&lt;/code&gt;. (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1222&quot;&gt;testcafe-hammerhead/#1222&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;scope&lt;/code&gt; option in the &lt;code&gt;serviceWorker.register&lt;/code&gt; function is now processed correctly. (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1233&quot;&gt;testcafe-hammerhead/#1233&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Promises from a fetch request are now processed correctly. (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1234&quot;&gt;testcafe-hammerhead/#1234&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fix transpiling for the &lt;code&gt;for..of&lt;/code&gt; loop to support browsers without &lt;code&gt;window.Iterator&lt;/code&gt;. (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1231&quot;&gt;testcafe-hammerhead/#1231&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 02 Aug 2017 00:00:00 +0300</pubDate>
        <link>http://devexpress.github.io/testcafe/blog/testcafe-v0-17-0-released.html</link>
        <guid isPermaLink="true">http://devexpress.github.io/testcafe/blog/testcafe-v0-17-0-released.html</guid>
        
        
      </item>
    
      <item>
        <title>TestCafe v0.16.0 Released</title>
        <description>&lt;h1&gt;TestCafe v0.16.0 Released&lt;/h1&gt;
&lt;p&gt;TypeScript support, seamless testing in headless Chrome and device emulator, and numerous bug fixes.&lt;/p&gt;

&lt;!--more--&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;enhancements&quot;&gt;&lt;/a&gt;Enhancements &lt;a class=&quot;permalink&quot; href=&quot;#enhancements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;typescript-support-408&quot;&gt;&lt;/a&gt;⚙ TypeScript support (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/408&quot;&gt;#408&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#typescript-support-408&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In this release, we have added the capability to write tests in &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt;. By using TypeScript to write your TestCafe tests, you get the advantages of strongly-typed languages such as: rich coding assistance, painless scalability, check-as-you-type code verification, and much more.&lt;/p&gt;

&lt;p&gt;TestCafe bundles TypeScript declaration file with the npm package, so you have no need to install any additional packages.&lt;/p&gt;

&lt;p&gt;Just create a &lt;code&gt;.ts&lt;/code&gt; file with the&lt;/p&gt;

&lt;!-- Use `js` instead of `ts` for this code block for proper code highlighting --&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Selector&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'testcafe'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and write your test.&lt;/p&gt;

&lt;p&gt;For details, see &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/test-api/typescript-support.html&quot;&gt;TypeScript Support&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;support-running-in-chrome-in-headless-mode-and-in-device-emulator-1417&quot;&gt;&lt;/a&gt;⚙ Support running in Chrome in headless mode and in device emulator (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1417&quot;&gt;#1417&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#support-running-in-chrome-in-headless-mode-and-in-device-emulator-1417&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Now TestCafe allows you to run your tests in Google Chrome in headless and device emulation modes.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2017/04/headless-chrome&quot;&gt;Headless mode&lt;/a&gt; allows you to run tests in Chrome without any visible UI shell. To run tests in headless mode, use the &lt;code&gt;:headless&lt;/code&gt; postfix:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;testcafe &lt;span class=&quot;s2&quot;&gt;&quot;chrome:headless&quot;&lt;/span&gt; tests/sample-fixture.js
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Device emulation mode allows you to check how your tests works on mobile devices via Chrome&amp;#39;s built-in &lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/device-mode/&quot;&gt;device emulator&lt;/a&gt;. To run tests in device emulation mode, specify &lt;code&gt;emulation:&lt;/code&gt; and &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/common-concepts/browsers/using-chrome-device-emulation.html#emulator-parameters&quot;&gt;device parameters&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;testcafe &lt;span class=&quot;s2&quot;&gt;&quot;chrome:emulation:device=iphone 6&quot;&lt;/span&gt; tests/sample-fixture.js
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For details, see &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/common-concepts/browsers/using-chrome-device-emulation.html&quot;&gt;Using Chrome-specific Features&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;support-html5-drag-and-drop-897&quot;&gt;&lt;/a&gt;⚙ Support HTML5 Drag and Drop (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/897&quot;&gt;#897&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#support-html5-drag-and-drop-897&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Starting with this release, TestCafe supports HTML5 drag and drop, so you can test elements with the &lt;code&gt;draggable&lt;/code&gt; &lt;a href=&quot;http://w3c.github.io/html/editing.html#the-draggable-attribute&quot;&gt;attribute&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;fixed-url-for-opening-remote-browsers-1476&quot;&gt;&lt;/a&gt;⚙ Fixed URL for opening remote browsers (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1476&quot;&gt;#1476&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#fixed-url-for-opening-remote-browsers-1476&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We have simplified the format of links that TestCafe generates when you &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/common-concepts/browsers/browser-support.html#browsers-on-remote-devices&quot;&gt;run tests on remote browsers&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now, you have no need to type a unique link for each test run, all the links became constant. So, it is easier now to run tests on a remote device repeatedly: you can run them by navigating a link from your browser history.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;bug-fixes&quot;&gt;&lt;/a&gt;Bug Fixes &lt;a class=&quot;permalink&quot; href=&quot;#bug-fixes&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;No TestCafe UI on screenshots created during testing (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1357&quot;&gt;#1357&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mouseenter&lt;/code&gt; and &lt;code&gt;mouseleave&lt;/code&gt; events are not triggered during cursor moving (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1426&quot;&gt;#1426&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The runner&amp;#39;s speed option affects the speed of &lt;code&gt;doubleClick&lt;/code&gt; action (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1486&quot;&gt;#1486&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Press action shortcuts work wrong if input&amp;#39;s value ends with &amp;#39;.&amp;#39; or starts with &amp;#39;-.&amp;#39; (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1499&quot;&gt;#1499&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;A test report has too small line length on Travis (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1469&quot;&gt;#1469&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Service messages with cookies do not have enough time to come to server before a new page is loaded (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1086&quot;&gt;testcafe-hammerhead/#1086&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;window.history.replaceState&lt;/code&gt; function is overridden incorrectly (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1146&quot;&gt;testcafe-hammerhead/#1146&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Hammerhead crashes if a script file contains a sourcemap comment (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1052&quot;&gt;testcafe-hammerhead/#1052&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The proxy should override the &lt;code&gt;DOMParser.parseFromString&lt;/code&gt; method (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1133&quot;&gt;testcafe-hammerhead/#1133&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;fetch&lt;/code&gt; method should emulate the native behaviour on merging headers (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1116&quot;&gt;testcafe-hammerhead/#1116&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;EventSource&lt;/code&gt; requests are broken when used via proxy (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1106&quot;&gt;testcafe-hammerhead/#1106&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The code processing may cause syntax errors in some cases because of wrong &lt;code&gt;location&lt;/code&gt; property wrapping (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1101&quot;&gt;testcafe-hammerhead/#1101&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;When calling the &lt;code&gt;fetch&lt;/code&gt; function without parameters, we should return its native result instead of &lt;code&gt;window.Promise.reject&lt;/code&gt; (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1099&quot;&gt;testcafe-hammerhead/#1099&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;querySelector&lt;/code&gt; function is overridden incorrectly (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1131&quot;&gt;testcafe-hammerhead/#1131&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 13 Jun 2017 00:00:00 +0300</pubDate>
        <link>http://devexpress.github.io/testcafe/blog/testcafe-v0-16-0-released.html</link>
        <guid isPermaLink="true">http://devexpress.github.io/testcafe/blog/testcafe-v0-16-0-released.html</guid>
        
        
      </item>
    
      <item>
        <title>TestCafe v0.15.0 Released</title>
        <description>&lt;h1&gt;TestCafe v0.15.0 Released&lt;/h1&gt;
&lt;p&gt;Plugins for React and Vue.js, TestCafe Docker image, support for Internet access proxies and lots of bug fixes.&lt;/p&gt;

&lt;!--more--&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;breaking-changes&quot;&gt;&lt;/a&gt;Breaking Changes &lt;a class=&quot;permalink&quot; href=&quot;#breaking-changes&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;new-calls-to-selectors-withtext-method-no-longer-override-previous-calls&quot;&gt;&lt;/a&gt;New calls to selector&amp;#39;s withText method no longer override previous calls &lt;a class=&quot;permalink&quot; href=&quot;#new-calls-to-selectors-withtext-method-no-longer-override-previous-calls&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We have changed the way the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/test-api/selecting-page-elements/selectors/functional-style-selectors.html#withtext&quot;&gt;withText&lt;/a&gt;
method behaves when it is called in a chain.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;el&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'div'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;withText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'This is'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;withText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'my element'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In previous versions, this selector searched for a &lt;code&gt;div&lt;/code&gt; with text &lt;code&gt;my element&lt;/code&gt; because the second call to &lt;code&gt;withText&lt;/code&gt; overrode the first one.&lt;/p&gt;

&lt;p&gt;Now this code returns an element whose text contains both &lt;code&gt;This is&lt;/code&gt; and &lt;code&gt;my element&lt;/code&gt; as the second call compounds with the first one.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;enhancements&quot;&gt;&lt;/a&gt;Enhancements &lt;a class=&quot;permalink&quot; href=&quot;#enhancements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;plugin-for-testing-react-apps&quot;&gt;&lt;/a&gt;⚙ Plugin for testing React apps &lt;a class=&quot;permalink&quot; href=&quot;#plugin-for-testing-react-apps&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In this release cycle, we have created a plugin for testing React applications.
This plugin allows you to select React components by their names.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ReactSelector&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'testcafe-react-selector'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TodoList&lt;/span&gt;         &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ReactSelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'TodoApp TodoList'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;itemsCountStatus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ReactSelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'TodoApp div'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;itemsCount&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ReactSelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'TodoApp div span'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And it enables you to get React component&amp;#39;s &lt;code&gt;state&lt;/code&gt; and &lt;code&gt;props&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ReactSelector&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'testcafe-react-selector'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;fixture&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;TODO&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'http://localhost:1337'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Check list item'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;el&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ReactSelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'TodoList'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;el&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getReact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;priority&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;eql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'High'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;el&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getReact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isActive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;eql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To learn more, see the &lt;a href=&quot;https://github.com/DevExpress/testcafe-react-selectors/&quot;&gt;testcafe-react-selectors&lt;/a&gt; repository.&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;plugin-for-testing-vuejs-apps&quot;&gt;&lt;/a&gt;⚙ Plugin for testing Vue.js apps &lt;a class=&quot;permalink&quot; href=&quot;#plugin-for-testing-vuejs-apps&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In addition to the React plugin, we have released a plugin that facilitates testing Vue.js applications.&lt;/p&gt;

&lt;p&gt;In the same manner, it allows you to select Vue.js components with &lt;code&gt;VueSelector&lt;/code&gt; selectors.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;VueSelector&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'testcafe-vue-selectors'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rootVue&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;VueSelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;todoInput&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;VueSelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'todo-input'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;todoItem&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;VueSelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'todo-list todo-item'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;These selectors allow you to get Vue component&amp;#39;s &lt;code&gt;props&lt;/code&gt;, &lt;code&gt;state&lt;/code&gt; and &lt;code&gt;computed&lt;/code&gt; properties.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;VueSelector&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'testcafe-vue-selector'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;fixture&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;TODO&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'http://localhost:1337'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Check list item'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;todoItem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;VueSelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'todo-item'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;todoItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getVue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;priority&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;eql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'High'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;todoItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getVue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isActive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;eql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;todoItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getVue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;computed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;eql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Item 1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To learn more, see the &lt;a href=&quot;https://github.com/DevExpress/testcafe-vue-selectors&quot;&gt;testcafe-vue-selectors&lt;/a&gt; repository.&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;testcafe-docker-image-1141&quot;&gt;&lt;/a&gt;⚙ TestCafe Docker image (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1141&quot;&gt;#1141&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#testcafe-docker-image-1141&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We have created a Docker image with TestCafe, Chromium and Firefox preinstalled.&lt;/p&gt;

&lt;p&gt;You no longer need to manually install browsers or the testing framework on your server.
Pull the Docker image from the repository and run TestCafe immediately.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;docker pull testcafe/testcafe
docker run -v //user/tests:/tests -it testcafe/testcafe firefox tests/&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.js
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To learn more, see &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/using-testcafe-docker-image.html&quot;&gt;Using TestCafe Docker Image&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;support-for-internet-access-proxies-1206&quot;&gt;&lt;/a&gt;⚙ Support for Internet access proxies (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1206&quot;&gt;#1206&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#support-for-internet-access-proxies-1206&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If your local network uses a proxy server to access the Internet, TestCafe can use it reach the external webpages.&lt;/p&gt;

&lt;p&gt;To specify the proxy server, use a command line option&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;testcafe chrome my-tests/&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.js --proxy 172.0.10.10:8080
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or a method in the API.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;runner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;useProxy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'username:password@proxy.mycorp.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that you can pass the credentials with the proxy server host.&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;debugging-mode-option-1347&quot;&gt;&lt;/a&gt;⚙ Debugging mode option (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1347&quot;&gt;#1347&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#debugging-mode-option-1347&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;As an alternative to calling the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/test-api/debugging.html#client-side-debugging&quot;&gt;t.debug&lt;/a&gt; method
in test code, you can now specify the &lt;code&gt;--debug-mode&lt;/code&gt; command line option to pause the test before the first action or assertion.
When the test is paused, you can debug in the browser developer tools as well as continue test execution step by step.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;testcafe chrome my-tests/&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.js --debug-mode
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you use TestCafe API, provide the &lt;code&gt;debugMode&lt;/code&gt; option to the &lt;code&gt;runner.run&lt;/code&gt; method.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;runner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;debugMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;filtering-selectors-matching-set-by-attribute-1346&quot;&gt;&lt;/a&gt;⚙ Filtering selector&amp;#39;s matching set by attribute (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1346&quot;&gt;#1346&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#filtering-selectors-matching-set-by-attribute-1346&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can now use the &lt;code&gt;withAttribute&lt;/code&gt; method to select elements that have a particular attribute set to a specific value.
You can omit the attribute value to select elements that simply have the specified attribute.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;el&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'div'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;withAttribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'attributeName'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'value'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;hasattribute-method-added-to-dom-node-state-1045&quot;&gt;&lt;/a&gt;⚙ hasAttribute method added to DOM node state (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1045&quot;&gt;#1045&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#hasattribute-method-added-to-dom-node-state-1045&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;For you convenience, the DOM node state object now provides the &lt;code&gt;hasAttribute&lt;/code&gt; method that allows you to determine if an element has a particular attribute.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;el&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'div.button'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;el&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hasAttribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'disabled'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;redirection-when-switching-between-roles-1339&quot;&gt;&lt;/a&gt;⚙ Redirection when switching between roles (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1339&quot;&gt;#1339&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#redirection-when-switching-between-roles-1339&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/test-api/authentication/user-roles.html&quot;&gt;User roles&lt;/a&gt; now provide a &lt;code&gt;preserveUrl&lt;/code&gt; option
that allows you to save the webpage URL to which the browser was redirected after logging in. If you enable this option when creating a role,
the browser will be redirected to the saved URL every time you switch to this role.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;regularUser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Role&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/* authentication code */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;preserveUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;bug-fixes&quot;&gt;&lt;/a&gt;Bug Fixes &lt;a class=&quot;permalink&quot; href=&quot;#bug-fixes&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Fixed a bug where incorrect call site and callstack were generated for an assertion that failed in a class method (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1267&quot;&gt;#1267&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Incorrect validation result no longer appears when a test controller is used inside an async function (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1285&quot;&gt;#1285&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Click on the status panel no longer affects the page state (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1389&quot;&gt;#1389&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;input&lt;/code&gt; event is now raised with a correct selection value when input value was changed (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1388&quot;&gt;#1388&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Inline source maps are now placed in transpiled files so that breakpoints work correctly (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1375&quot;&gt;#1375&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;value&lt;/code&gt; and &lt;code&gt;selectedIndex&lt;/code&gt; in the &lt;code&gt;input&lt;/code&gt; event handler for the dropdown element are now valid (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1366&quot;&gt;#1366&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;A &lt;code&gt;presskey(&amp;#39;enter&amp;#39;)&lt;/code&gt; call now raises the &lt;code&gt;click&lt;/code&gt; event on a button element (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1424&quot;&gt;#1424&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The cursor position in Monaco editor is now set correctly on the click action (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1385&quot;&gt;#1385&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hasScroll&lt;/code&gt; now works correctly if the &lt;code&gt;body&lt;/code&gt; has absolute positioning (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1353&quot;&gt;#1353&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Text can now be typed into HTML5 input elements (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1327&quot;&gt;#1327&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;focusin&lt;/code&gt; and &lt;code&gt;focusout&lt;/code&gt; events are now raised when the browser window is in the background (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1044&quot;&gt;testcafe-hammerhead/#1044&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;caretPositionFromPoint&lt;/code&gt; and &lt;code&gt;caretRangeFromPoint&lt;/code&gt; now ignore TestCafe UI elements on the page (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1084&quot;&gt;testcafe-hammerhead/#1084&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Images created with the &lt;code&gt;Image&lt;/code&gt; constructor are now loaded through the proxy (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1087&quot;&gt;testcafe-hammerhead/#1087&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;innerText&lt;/code&gt; return value is now clear of script and style code (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1079&quot;&gt;testcafe-hammerhead/#1079&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Non-string values for element&amp;#39;s text properties are now converted to &lt;code&gt;String&lt;/code&gt; (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1091&quot;&gt;testcafe-hammerhead/#1091&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;SVG elements are now processed correctly in IE (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1083&quot;&gt;testcafe-hammerhead/#1083&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 26 Apr 2017 00:00:00 +0300</pubDate>
        <link>http://devexpress.github.io/testcafe/blog/testcafe-v0-15-0-released.html</link>
        <guid isPermaLink="true">http://devexpress.github.io/testcafe/blog/testcafe-v0-15-0-released.html</guid>
        
        
      </item>
    
  </channel>
</rss>
