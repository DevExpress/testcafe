<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TestCafe</title>
    <description></description>
    <link>https://devexpress.github.io/testcafe/</link>
    <atom:link href="https://devexpress.github.io/testcafe/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 07 Aug 2019 19:17:34 +0300</pubDate>
    <lastBuildDate>Wed, 07 Aug 2019 19:17:34 +0300</lastBuildDate>
    <generator>Jekyll v3.8.4</generator>
    
      <item>
        <title>TestCafe v1.4.0 Released</title>
        <description>&lt;h1&gt;TestCafe v1.4.0 Released&lt;/h1&gt;
&lt;p&gt;This release introduces the capability to inject custom scripts into tested pages.&lt;/p&gt;

&lt;!--more--&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;enhancements&quot;&gt;&lt;/a&gt;Enhancements &lt;a class=&quot;permalink&quot; href=&quot;#enhancements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;inject-scripts-into-tested-pages-1739&quot;&gt;&lt;/a&gt;âš™ Inject Scripts Into Tested Pages (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1739&quot;&gt;#1739&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#inject-scripts-into-tested-pages-1739&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;TestCafe now allows you to &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/common-concepts/inject-scripts-into-tested-pages.html&quot;&gt;inject scripts&lt;/a&gt; into pages visited during the tests. Use this feature to add helper functions, mock browser API or import modules.&lt;/p&gt;

&lt;p&gt;To add client scripts to all tests, specify them in the command line, API or configuration file. Use the following options:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/command-line-interface.html#--cs-pathpath2---client-scripts-pathpath2&quot;&gt;--cs (--client-scripts)&lt;/a&gt; command line argument&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;testcafe chrome test.js --client-scripts&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;mockDate.js,assets/react-helpers.js
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/programming-interface/runner.html#clientscripts&quot;&gt;runner.clientScripts&lt;/a&gt; API method&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;runner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientScripts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'mockDate.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'scripts/react-helpers.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/configuration-file.html#clientscripts&quot;&gt;clientScripts&lt;/a&gt; configuration file property&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;clientScripts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mockDate.js&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;scripts/react-helpers.js&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you need to add scripts to individual fixtures or tests, use the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/test-api/test-code-structure.html#inject-scripts-into-tested-pages&quot;&gt;fixture.clientScripts&lt;/a&gt; and &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/test-api/test-code-structure.html#inject-scripts-into-tested-pages&quot;&gt;test.clientScripts&lt;/a&gt; methods in test code.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;fixture&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;My&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fixture&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//example.com`&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientScripts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'mockDate.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'scripts/react-helpers.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'My test'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* ... */&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientScripts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'mockDate.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'scripts/react-helpers.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;TestCafe also allows you to &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/common-concepts/inject-scripts-into-tested-pages.html#provide-scripts-for-specific-pages&quot;&gt;inject scripts into specific pages&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;fixture&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;My&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fixture&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientScripts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'https://myapp.com/page/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'scripts/vue-helpers.js'&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is helpful when you need to override the browser API on particular pages and use the default behavior everywhere else.&lt;/p&gt;

&lt;p&gt;You can specify the scripts to inject as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;pass the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/common-concepts/inject-scripts-into-tested-pages.html#inject-a-javascript-file&quot;&gt;path to a JavaScript file&lt;/a&gt; to inject its content:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;fixture&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;My&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fixture&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientScripts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'assets/jquery.js'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;use the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/common-concepts/inject-scripts-into-tested-pages.html#inject-a-module&quot;&gt;module name&lt;/a&gt; to inject a module:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;fixture&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;My&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fixture&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientScripts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'async'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;TestCafe searches for the module&amp;#39;s entry point with Node.js mechanisms and injects its content. Note that the browser must be able to execute this module.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;pass the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/common-concepts/inject-scripts-into-tested-pages.html#inject-script-code&quot;&gt;code&lt;/a&gt; you need to inject:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;fixture&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;My&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fixture&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientScripts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Geolocation.prototype.getCurrentPosition = () =&amp;gt; new Positon(0, 0);'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more information, see &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/common-concepts/inject-scripts-into-tested-pages.html&quot;&gt;Inject Scripts into Tested Pages&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;bug-fixes&quot;&gt;&lt;/a&gt;Bug Fixes &lt;a class=&quot;permalink&quot; href=&quot;#bug-fixes&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The browser no longer displays 404 errors after the test submits a form (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/3560&quot;&gt;#3560&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;TestCafe can now download files when testing in headless mode (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/3127&quot;&gt;#3127&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;TypeScript no longer throws an error when &lt;code&gt;fixture&lt;/code&gt; or &lt;code&gt;fixture.page&lt;/code&gt; uses a tag function (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/4042&quot;&gt;#4042&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;load&lt;/code&gt; event now correctly fires for cached images (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1959&quot;&gt;testcafe-hammerhead/#1959&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;TestCafe can now read resources from &lt;code&gt;asar&lt;/code&gt; archives (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/2033&quot;&gt;testcafe-hammerhead/#2033&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fixed a bug when &lt;code&gt;testcafe-hammerhead&lt;/code&gt; event listeners were called twice (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/2062&quot;&gt;testcafe-hammerhead/#2062&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 07 Aug 2019 00:00:00 +0300</pubDate>
        <link>https://devexpress.github.io/testcafe/blog/testcafe-v1-4-0-released.html</link>
        <guid isPermaLink="true">https://devexpress.github.io/testcafe/blog/testcafe-v1-4-0-released.html</guid>
        
        
      </item>
    
      <item>
        <title>TestCafe v1.3.1 Released</title>
        <description>&lt;h1&gt;TestCafe v1.3.1 Released&lt;/h1&gt;
&lt;p&gt;This release fixes an issue caused by &lt;code&gt;tsconfig.json&lt;/code&gt; auto-detection.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Version 1.3.0 introduced support for &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/test-api/typescript-support.html#customize-compiler-options&quot;&gt;custom TypeScript configuration files&lt;/a&gt; where you can provide the compiler options. This feature included automatic detection of these configuration files. If the directory from which you run tests contained a &lt;code&gt;tsconfig.json&lt;/code&gt; file, TestCafe would apply it by default.&lt;/p&gt;

&lt;p&gt;However, this behavior caused troubles for users who have already had &lt;code&gt;tsconfig.json&lt;/code&gt; files with conflicting settings in their projects. TestCafe attempted to apply these configurations, which resulted in issues with test compilation.&lt;/p&gt;

&lt;p&gt;In v1.3.1, we have disabled &lt;code&gt;tsconfig.json&lt;/code&gt; auto-detection. Now you must explicitly specify the &lt;code&gt;tsconfig.json&lt;/code&gt; file location to apply the compiler settings. You can do it in one of the following ways:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/command-line-interface.html#--ts-config-path-path&quot;&gt;--ts-config-path&lt;/a&gt; command line parameter,&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;testcafe chrome my-tests --ts-config-path /Users/s.johnson/testcafe/tsconfig.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/programming-interface/runner.html#tsconfigpath&quot;&gt;runner.tsConfigPath&lt;/a&gt; API method,&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;runner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tsConfigPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/Users/s.johnson/testcafe/tsconfig.json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/configuration-file.html#tsconfigpath&quot;&gt;tsConfigPath&lt;/a&gt; configuration file property.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;tsConfigPath&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/Users/s.johnson/testcafe/tsconfig.json&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We strongly recommend that you upgrade to v1.3.1. We apologize for any inconvenience.&lt;/p&gt;
</description>
        <pubDate>Fri, 05 Jul 2019 00:00:00 +0300</pubDate>
        <link>https://devexpress.github.io/testcafe/blog/testcafe-v1-3-1-released.html</link>
        <guid isPermaLink="true">https://devexpress.github.io/testcafe/blog/testcafe-v1-3-1-released.html</guid>
        
        
      </item>
    
      <item>
        <title>TestCafe v1.3.0 Released</title>
        <description>&lt;h1&gt;TestCafe v1.3.0 Released&lt;/h1&gt;
&lt;p&gt;This release introduces support for the custom TypeScript configuration file and includes numerous bugfixes.&lt;/p&gt;

&lt;!--more--&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;enhancements&quot;&gt;&lt;/a&gt;Enhancements &lt;a class=&quot;permalink&quot; href=&quot;#enhancements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;customize-typescript-compiler-options-1845&quot;&gt;&lt;/a&gt;âš™ Customize TypeScript Compiler Options (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1845&quot;&gt;#1845&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#customize-typescript-compiler-options-1845&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;&lt;blockquote&gt;&lt;div class=&quot;blockquote-content&quot;&gt;&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; v1.3.1 disables automatic detection of the &lt;code&gt;tsconfig.json&lt;/code&gt; file. See &lt;a href=&quot;https://devexpress.github.io/testcafe/blog/testcafe-v1-3-1-released.html&quot;&gt;v1.3.1 release notes&lt;/a&gt; for more information.&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;TestCafe now allows you to specify the &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/compiler-options.html&quot;&gt;TypeScript compiler options&lt;/a&gt; in the &lt;code&gt;tsconfig.json&lt;/code&gt; configuration file. You can use these options to enable JSX compilation, import code or typings with &lt;code&gt;paths&lt;/code&gt; aliases, set aliases to React typings, or customize other compiler settings.&lt;/p&gt;

&lt;p&gt;Define the &lt;code&gt;compilerOptions&lt;/code&gt; property in &lt;code&gt;tsconfig.json&lt;/code&gt; and specify the compiler options in this property:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;compilerOptions&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;jsx&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;react&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;jsxFactory&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;myFactory&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;paths&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;jquery&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;node_modules/jquery/dist/jquery&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;alwaysStrict&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Save this file to the directory from which you run tests (or use the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/configuration-file.html#tsconfigpath&quot;&gt;tsConfigPath&lt;/a&gt; setting in the main configuration file to specify a different location).&lt;/p&gt;

&lt;p&gt;See &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/test-api/typescript-support.html#customize-compiler-options&quot;&gt;Customize Compiler Options&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;bug-fixes&quot;&gt;&lt;/a&gt;Bug Fixes &lt;a class=&quot;permalink&quot; href=&quot;#bug-fixes&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;TestCafe now waits for asynchronous tasks in &lt;code&gt;reportTaskDone&lt;/code&gt; to complete before it exits (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/3835&quot;&gt;#3835&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;childNodes.length&lt;/code&gt; now returns the correct result after you type in an &lt;code&gt;iframe&lt;/code&gt; (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/3887&quot;&gt;#3887&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;TestCafe no longer hangs when a custom request hook throws an error (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/3786&quot;&gt;#3786&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Error messages now show the correct selector chains for selectors that use the &lt;code&gt;with&lt;/code&gt; method (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/3874&quot;&gt;#3874&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;TestCafe can now work with test files located on a Windows network drive (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/3918&quot;&gt;#3918&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Page elements overlapped by the TestCafe status panel are now scrolled into view correctly (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/3924&quot;&gt;#3924&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Labels with the &lt;code&gt;tabIndex&lt;/code&gt; and &lt;code&gt;for&lt;/code&gt; attributes are now focused correctly (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/3501&quot;&gt;#3501&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fixed a bug that prevented elements behind the footer from being scrolled up on some pages (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2601&quot;&gt;#2601&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Enhanced the previous fix for a Chrome 75 compatibility issue when &lt;code&gt;t.typeText&lt;/code&gt; typed each character at the beginning of the input (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/3865&quot;&gt;#3865&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;jQuery scroll functions no longer cause errors (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/2045&quot;&gt;testcafe-hammerhead/#2045&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 02 Jul 2019 00:00:00 +0300</pubDate>
        <link>https://devexpress.github.io/testcafe/blog/testcafe-v1-3-0-released.html</link>
        <guid isPermaLink="true">https://devexpress.github.io/testcafe/blog/testcafe-v1-3-0-released.html</guid>
        
        
      </item>
    
      <item>
        <title>TestCafe v1.1.0 Released</title>
        <description>&lt;h1&gt;TestCafe v1.1.0 Released&lt;/h1&gt;
&lt;p&gt;This release introduces TypeScript 3.0 support and enhanced TypeScript definitions for client functions.&lt;/p&gt;

&lt;!--more--&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;enhancements&quot;&gt;&lt;/a&gt;Enhancements &lt;a class=&quot;permalink&quot; href=&quot;#enhancements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;typescript-3-support-3401&quot;&gt;&lt;/a&gt;âš™ TypeScript 3 Support (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/3401&quot;&gt;#3401&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#typescript-3-support-3401&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;TypeScript test files can now use the new syntax features introduced in &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-0.html&quot;&gt;TypeScript 3.0&lt;/a&gt; and &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-3.html&quot;&gt;TypeScript 3.3&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;enhanced-typescript-definitions-for-client-functions-3431-by-vitalics&quot;&gt;&lt;/a&gt;âš™ Enhanced TypeScript Definitions for Client Functions (&lt;a href=&quot;https://github.com/DevExpress/testcafe/pull/3431&quot;&gt;#3431&lt;/a&gt;) by &lt;a href=&quot;https://github.com/vitalics&quot;&gt;@vitalics&lt;/a&gt; &lt;a class=&quot;permalink&quot; href=&quot;#enhanced-typescript-definitions-for-client-functions-3431-by-vitalics&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The updated type definitions allow the TypeScript compiler to determine client function&amp;#39;s return value type. Static typing now warns you when you call wrong methods for the return value.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getFoo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ClientFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getFoo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/foo/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Before v1.1.0, an error occurred during test execution:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ testcafe chrome tests.ts
 Running tests in:
 - Chrome 72.0.3626 / Windows 10.0.0
 Fixture 1
 âˆš Test 1
 âˆš Test 2
 ...
 Ã— Test N
   1) TypeError: foo.match is not a function
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With v1.1.0, the TypeScript compiler throws an error before tests are started:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ testcafe chrome tests.ts
  ERROR Cannot prepare tests due to an error.
  Error: TypeScript compilation failed.

  tests.ts (4, 2): Property 'match' does not exist on type 'number'.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;bug-fixes&quot;&gt;&lt;/a&gt;Bug Fixes &lt;a class=&quot;permalink&quot; href=&quot;#bug-fixes&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;TestCafe no longer ignores test and fixture metadata filters specified in the configuration file (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/3443&quot;&gt;#3443&lt;/a&gt;) by &lt;a href=&quot;https://github.com/NanjoW&quot;&gt;@NanjoW&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;TestCafe no longer resolves placeholders to &lt;code&gt;null&lt;/code&gt; in video path patterns (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/3455&quot;&gt;#3455&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fixed the &lt;code&gt;KeyboardEvent&lt;/code&gt;&amp;#39;s &lt;code&gt;key&lt;/code&gt; property emulation for Safari (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/3282&quot;&gt;#3282&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;TestCafe can now capture element screenshots after a long page scrolling (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/3292&quot;&gt;#3292&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The compilation time of TypeScript tests no longer degrades for a large number of files (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/3475&quot;&gt;#3475&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Reach Router can now navigate correctly when tested with TestCafe (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1863&quot;&gt;testcafe-hammerhead/#1863&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;TestCafe now correctly handles websites that use the &lt;code&gt;WebKitMutationObserver&lt;/code&gt; class (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1912&quot;&gt;testcafe-hammerhead/#1912&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;TestCafe now processes ECMAScript modules in &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tags (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1725&quot;&gt;testcafe-hammerhead/#1725&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 28 Feb 2019 00:00:00 +0300</pubDate>
        <link>https://devexpress.github.io/testcafe/blog/testcafe-v1-1-0-released.html</link>
        <guid isPermaLink="true">https://devexpress.github.io/testcafe/blog/testcafe-v1-1-0-released.html</guid>
        
        
      </item>
    
      <item>
        <title>TestCafe v1.0.0 Released</title>
        <description>&lt;h1&gt;TestCafe v1.0.0 Released&lt;/h1&gt;
&lt;p&gt;TestCafe v1.0.0 is our first major update that includes features like video recording, configuration file, &amp;quot;live mode&amp;quot; for rapid test development and much more.&lt;/p&gt;

&lt;!--more--&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;breaking-changes&quot;&gt;&lt;/a&gt;Breaking Changes &lt;a class=&quot;permalink&quot; href=&quot;#breaking-changes&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;TestCafe v1.0.0 introduces minor changes to the framework&amp;#39;s behavior and programming interface. You can find the details in the &lt;a href=&quot;https://devexpress.github.io/testcafe/blog/migration-from-testcafe-v0-x-y-to-v1-0-0.html&quot;&gt;migration guide&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;enhancements&quot;&gt;&lt;/a&gt;Enhancements &lt;a class=&quot;permalink&quot; href=&quot;#enhancements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;video-recording-2151&quot;&gt;&lt;/a&gt;âš™ Video Recording (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2151&quot;&gt;#2151&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#video-recording-2151&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can now &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/common-concepts/screenshots-and-videos.html#record-videos&quot;&gt;record videos of test runs&lt;/a&gt; in Google Chrome and Mozilla Firefox. To enable video recording, &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/common-concepts/screenshots-and-videos.html#prerequisites&quot;&gt;install the FFmpeg library&lt;/a&gt; and then do one of the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;specify the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/command-line-interface.html#--video-basepath&quot;&gt;--video&lt;/a&gt; command line flag,&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;testcafe chrome test.js --video artifacts/videos/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;call the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/programming-interface/runner.html#video&quot;&gt;runner.video&lt;/a&gt; API method,&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;runner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;video&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'artifacts/videos/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;specify the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/configuration-file.html#videopath&quot;&gt;videoPath&lt;/a&gt; configuration file property (configuration file is also a new feature, see below).&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;videoPath&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;artifacts/videos/&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;TestCafe records all tests and saves each recording in a separate file. You can change this behavior in &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/common-concepts/screenshots-and-videos.html#basic-video-options&quot;&gt;video options&lt;/a&gt;. You can also customize &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/common-concepts/screenshots-and-videos.html#video-encoding-options&quot;&gt;video encoding parameters&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;configuration-file-3131&quot;&gt;&lt;/a&gt;âš™ Configuration File (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/3131&quot;&gt;#3131&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#configuration-file-3131&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;TestCafe now allows you to store its settings in the &lt;code&gt;.testcaferc.json&lt;/code&gt; &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/configuration-file.html&quot;&gt;configuration file&lt;/a&gt; (with support for &lt;code&gt;JSON5&lt;/code&gt; syntax).&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;browsers&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;chrome&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;src&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/home/user/auth-tests/fixture-1.js&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/home/user/mobile-tests/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;reporter&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;xunit&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;output&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;reports/report.xml&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;screenshotPath&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/home/user/tests/screenshots/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;takeScreenshotsOnFails&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;videoPath&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/home/user/tests/videos/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;pageLoadTimeout&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;hostname&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;host.mycorp.com&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;and&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;more&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Keep the configuration file in the project&amp;#39;s root directory from which you run TestCafe.&lt;/p&gt;

&lt;p&gt;Settings you specify when you launch tests from the command line and programming interfaces override settings from &lt;code&gt;.testcaferc.json&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;See &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/configuration-file.html&quot;&gt;Configuration File&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;live-mode-3215&quot;&gt;&lt;/a&gt;âš™ Live Mode (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/3215&quot;&gt;#3215&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#live-mode-3215&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We have integrated the &lt;a href=&quot;https://github.com/DevExpress/testcafe-live&quot;&gt;testcafe-live&lt;/a&gt; module into our main code so you can now use the new &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/common-concepts/live-mode.html&quot;&gt;live mode&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Live mode keeps the TestCafe process and browsers opened the whole time you are working on tests. Changes you make in code immediately restart the tests. That is, live mode allows you to see test results instantly. See &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/common-concepts/live-mode.html#how-live-mode-works&quot;&gt;How Live Mode Works&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Use the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/command-line-interface.html#-l---live&quot;&gt;-L (--live)&lt;/a&gt; flag to enable live mode from the command line interface.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;testcafe chrome tests/test.js -L
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the API, create a &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/programming-interface/livemoderunner.html&quot;&gt;live mode runner&lt;/a&gt; with the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/programming-interface/testcafe.html#createlivemoderunner&quot;&gt;testcafe.createLiveModeRunner&lt;/a&gt; function and use it instead of a &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/programming-interface/runner.html&quot;&gt;regular test runner&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createTestCafe&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'testcafe'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;testcafe&lt;/span&gt;         &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;createTestCafe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'localhost'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1337&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1338&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;testcafe&lt;/span&gt;         &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;liveRunner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;testcafe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createLiveModeRunner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;liveRunner&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tests/test.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;browsers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'chrome'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;testcafe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;custom-reporter-api-enhancements-part-of-2753-pull-request&quot;&gt;&lt;/a&gt;âš™ Custom Reporter API Enhancements (Part of &lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2753&quot;&gt;#2753&lt;/a&gt;; &lt;a href=&quot;https://github.com/DevExpress/testcafe/pull/3177&quot;&gt;Pull Request&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#custom-reporter-api-enhancements-part-of-2753-pull-request&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;You can now access warnings that appeared during the test run from the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/extending-testcafe/reporter-plugin/reporter-methods.html#reporttestdone&quot;&gt;reportTestDone&lt;/a&gt; method. To do this, use the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/extending-testcafe/reporter-plugin/reporter-methods.html#testruninfo-object&quot;&gt;testRunInfo&lt;/a&gt; object&amp;#39;s &lt;code&gt;warnings&lt;/code&gt; property.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reportTestDone&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;testRunInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;meta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;warnings&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;testRunInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;warnings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hasWarnings&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;warnings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hasWarnings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Warnings:'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;warnings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;warning&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;warning&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/extending-testcafe/reporter-plugin/reporter-methods.html#reporttaskdone&quot;&gt;reportTaskDone&lt;/a&gt; method now receives the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/extending-testcafe/reporter-plugin/reporter-methods.html#result-object&quot;&gt;result&lt;/a&gt; parameter that contains information about the number of passed, failed, and skipped tests.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reportTaskDone&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;endTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;passed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;warnings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Testing&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;finished&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Passed&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;passedCount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Failed&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;failedCount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Skipped&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;skippedCount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;typings-for-programming-interface-3341-by-infctr&quot;&gt;&lt;/a&gt;âš™ Typings for Programming Interface (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/3341&quot;&gt;#3341&lt;/a&gt;) by &lt;a href=&quot;https://github.com/infctr&quot;&gt;@infctr&lt;/a&gt; &lt;a class=&quot;permalink&quot; href=&quot;#typings-for-programming-interface-3341-by-infctr&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;TestCafe &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/programming-interface/&quot;&gt;programming interface&lt;/a&gt; now features TypeScript typings.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/api-typings.png&quot; alt=&quot;API Typings&quot; title=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;programming-interface-simpler-api-to-write-reports-to-a-file&quot;&gt;&lt;/a&gt;âš™ Programming Interface: Simpler API to Write Reports to a File &lt;a class=&quot;permalink&quot; href=&quot;#programming-interface-simpler-api-to-write-reports-to-a-file&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You no longer need to use &lt;code&gt;fs.createWriteStream&lt;/code&gt; to create a stream that writes a report to a file. You can now pass the file name as the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/programming-interface/runner.html#reporter&quot;&gt;runner.reporter&lt;/a&gt; parameter.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;runnner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reporter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'reports/report.json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;bug-fixes&quot;&gt;&lt;/a&gt;Bug Fixes &lt;a class=&quot;permalink&quot; href=&quot;#bug-fixes&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The test runner no longer hangs when a custom reporter implementation uses synchronous callbacks (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/3209&quot;&gt;#3209&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fixture hooks for two adjacent fixtures are now executed in the correct order (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/3298&quot;&gt;#3298&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Iframes no longer throw an error after a &lt;code&gt;document.open&lt;/code&gt; call in IE and Edge (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/3343&quot;&gt;#3343&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;TestCafe no longer triggers a click event when you disable a button with a &lt;code&gt;span&lt;/code&gt; element inside (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2902&quot;&gt;#2902&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fixed a bug that led to errors in certain cases (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/3189&quot;&gt;#3189&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;We have improved the status panel design and adaptivity (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/3073&quot;&gt;#3073&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Redirects through several pages in iframes now work correctly (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1825&quot;&gt;testcafe-hammerhead/#1825&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;TestCafe can now correctly work with pages that override &lt;code&gt;HTMLElement.classList&lt;/code&gt; in IE11 (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1890&quot;&gt;testcafe-hammerhead/#1890&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 07 Feb 2019 00:00:00 +0300</pubDate>
        <link>https://devexpress.github.io/testcafe/blog/testcafe-v1-0-0-released.html</link>
        <guid isPermaLink="true">https://devexpress.github.io/testcafe/blog/testcafe-v1-0-0-released.html</guid>
        
        
      </item>
    
      <item>
        <title>Migration from TestCafe v0.x.y to v1.0.0</title>
        <description>&lt;h1&gt;Migration from TestCafe v0.x.y to v1.0.0&lt;/h1&gt;
&lt;p&gt;TestCafe v1.0.0 introduces minor changes to the framework&amp;#39;s behavior and programming interface. This document lists these changes and describes how to migrate to the new version.&lt;/p&gt;

&lt;!--more--&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#test-syntax-validation-disabled-all-input-files-are-executed&quot;&gt;Test Syntax Validation Disabled: All Input Files Are Executed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#custom-request-hooks-asynchronous-api&quot;&gt;Custom Request Hooks: Asynchronous API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#custom-reporter-plugins-asynchronous-api&quot;&gt;Custom Reporter Plugins: Asynchronous API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#programming-interface-multiple-method-calls-prohibited&quot;&gt;Programming Interface: Multiple Method Calls Prohibited&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;test-syntax-validation-disabled-all-input-files-are-executed&quot;&gt;&lt;/a&gt;Test Syntax Validation Disabled: All Input Files Are Executed &lt;a class=&quot;permalink&quot; href=&quot;#test-syntax-validation-disabled-all-input-files-are-executed&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Previous versions performed &lt;em&gt;test syntax validation&lt;/em&gt; within input script files before executing them. Only files that contained the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/test-api/test-code-structure.html#fixtures&quot;&gt;fixture&lt;/a&gt; and &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/test-api/test-code-structure.html#tests&quot;&gt;test&lt;/a&gt; directives were executed.&lt;/p&gt;

&lt;p&gt;Starting with v1.0.0, input script files are &lt;strong&gt;not&lt;/strong&gt; validated. This means that TestCafe executes all the scripts you specify as test sources. If you use Glob patterns to specify input test files, please recheck these patterns to avoid unintended file matches.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;--disable-test-syntax-validation&lt;/code&gt; command line flag and the &lt;code&gt;disableTestSyntaxValidation&lt;/code&gt; option for the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/programming-interface/runner.html#run&quot;&gt;runner.run&lt;/a&gt; API method that disabled test syntax validation were removed in v1.0.0.&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;what-has-improved&quot;&gt;&lt;/a&gt;What Has Improved &lt;a class=&quot;permalink&quot; href=&quot;#what-has-improved&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can now load tests dynamically without additional customization. The following example illustrates how tests can be imported from an external library:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;external-lib.js&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;runFixture&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;fixture&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;test.js&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;runFixture&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./external-lib'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fixtureName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'My fixture'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'https://testPage'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;runFixture&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fixtureName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;programming-interface-multiple-method-calls-prohibited&quot;&gt;&lt;/a&gt;Programming Interface: Multiple Method Calls Prohibited &lt;a class=&quot;permalink&quot; href=&quot;#programming-interface-multiple-method-calls-prohibited&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Previous versions allowed you to call the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/programming-interface/runner.html#src&quot;&gt;runner.src&lt;/a&gt;, &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/programming-interface/runner.html#browsers&quot;&gt;runner.browsers&lt;/a&gt; and &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/programming-interface/runner.html#reporter&quot;&gt;runner.reporter&lt;/a&gt; methods several times to specify multiple test files, browsers or reporters.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createWriteStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'report.json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;runner&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/home/user/tests/fixture1.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fixture5.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;browsers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'chrome'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;browsers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'firefox:headless'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reporter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'minimal'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reporter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Starting with v1.0.0, pass arrays to these methods to specify multiple values.&lt;/p&gt;

&lt;p&gt;To use a reporter that writes to a file, add a &lt;code&gt;{ name, output }&lt;/code&gt; object to an array (see the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/programming-interface/runner.html#reporter&quot;&gt;runner.reporter&lt;/a&gt; description for details).&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;runner&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/home/user/tests/fixture1.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'fixture5.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;browsers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'chrome'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'firefox:headless'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reporter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'minimal'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'report.json'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;what-has-improved&quot;&gt;&lt;/a&gt;What Has Improved &lt;a class=&quot;permalink&quot; href=&quot;#what-has-improved&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/configuration-file.html&quot;&gt;configuration file&lt;/a&gt; we implemented is consistent with the API and command line interface.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;custom-request-hooks-asynchronous-api&quot;&gt;&lt;/a&gt;Custom Request Hooks: Asynchronous API &lt;a class=&quot;permalink&quot; href=&quot;#custom-request-hooks-asynchronous-api&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/test-api/intercepting-http-requests/&quot;&gt;Request hook&lt;/a&gt; methods became asynchronous in TestCafe v1.0.0.&lt;/p&gt;

&lt;p&gt;If the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/test-api/intercepting-http-requests/creating-a-custom-http-request-hook.html#the-onrequest-method&quot;&gt;onRequest&lt;/a&gt; or &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/test-api/intercepting-http-requests/creating-a-custom-http-request-hook.html#the-onresponse-method&quot;&gt;onResponse&lt;/a&gt; method in your custom hook returns a Promise, TestCafe now waits for this Promise to resolve.&lt;/p&gt;

&lt;p&gt;You should add the &lt;code&gt;async&lt;/code&gt; keyword to the asynchronous &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/test-api/intercepting-http-requests/creating-a-custom-http-request-hook.html#the-onrequest-method&quot;&gt;onRequest&lt;/a&gt; and &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/test-api/intercepting-http-requests/creating-a-custom-http-request-hook.html#the-onresponse-method&quot;&gt;onResponse&lt;/a&gt; method declarations.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RequestHook&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'testcafe'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MyRequestHook&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RequestHook&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;constructor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;requestFilterRules&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;responseEventConfigureOpts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kr&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;requestFilterRules&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;responseEventConfigureOpts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onRequest&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onResponse&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;what-has-improved&quot;&gt;&lt;/a&gt;What Has Improved &lt;a class=&quot;permalink&quot; href=&quot;#what-has-improved&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can call asynchronous &lt;a href=&quot;https://nodejs.org/api/fs.html&quot;&gt;fs&lt;/a&gt; functions, invoke a &lt;a href=&quot;https://nodejs.org/api/child_process.html&quot;&gt;child_process&lt;/a&gt;, or perform asynchronous network requests (to a database or any other server) from inside the hooks.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;custom-reporter-plugins-asynchronous-api&quot;&gt;&lt;/a&gt;Custom Reporter Plugins: Asynchronous API &lt;a class=&quot;permalink&quot; href=&quot;#custom-reporter-plugins-asynchronous-api&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;TestCafe v1.0.0 also introduces an asynchronous API for &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/extending-testcafe/reporter-plugin/&quot;&gt;reporter plugins&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Similarly to &lt;a href=&quot;#custom-request-hooks-asynchronous-api&quot;&gt;request hooks&lt;/a&gt;, if any of the custom reporter&amp;#39;s methods (&lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/extending-testcafe/reporter-plugin/reporter-methods.html#reporttaskstart&quot;&gt;reportTaskStart&lt;/a&gt;, &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/extending-testcafe/reporter-plugin/reporter-methods.html#reportfixturestart&quot;&gt;reportFixtureStart&lt;/a&gt;, &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/extending-testcafe/reporter-plugin/reporter-methods.html#reporttestdone&quot;&gt;reportTestDone&lt;/a&gt; or &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/extending-testcafe/reporter-plugin/reporter-methods.html#reporttaskdone&quot;&gt;reportTaskDone&lt;/a&gt;) returns a Promise, this Promise is now awaited.&lt;/p&gt;

&lt;p&gt;Since the reporter methods are now asynchronous, add the &lt;code&gt;async&lt;/code&gt; keyword to their declarations.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reportTaskStart&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;startTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;userAgents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;testCount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reportFixtureStart&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;meta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reportTestDone&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;testRunInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;meta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reportTaskDone&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;endTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;passed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;warnings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;what-has-improved&quot;&gt;&lt;/a&gt;What Has Improved &lt;a class=&quot;permalink&quot; href=&quot;#what-has-improved&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Reporters can call asynchronous &lt;a href=&quot;https://nodejs.org/api/fs.html&quot;&gt;fs&lt;/a&gt; functions, invoke a &lt;a href=&quot;https://nodejs.org/api/child_process.html&quot;&gt;child_process&lt;/a&gt;, or perform asynchronous network requests (to send an email, use REST API, connect to a database, etc).&lt;/p&gt;
</description>
        <pubDate>Thu, 07 Feb 2019 00:00:00 +0300</pubDate>
        <link>https://devexpress.github.io/testcafe/blog/migration-from-testcafe-v0-x-y-to-v1-0-0.html</link>
        <guid isPermaLink="true">https://devexpress.github.io/testcafe/blog/migration-from-testcafe-v0-x-y-to-v1-0-0.html</guid>
        
        
      </item>
    
      <item>
        <title>TestCafe v0.23.1 Released</title>
        <description>&lt;h1&gt;TestCafe v0.23.1 Released&lt;/h1&gt;
&lt;p&gt;Use metadata to select and run tests and fixtures, and load tests dynamically.&lt;/p&gt;

&lt;!--more--&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;enhancements&quot;&gt;&lt;/a&gt;Enhancements &lt;a class=&quot;permalink&quot; href=&quot;#enhancements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;select-tests-and-fixtures-to-run-by-their-metadata-2527-by-nickcis&quot;&gt;&lt;/a&gt;âš™ Select Tests and Fixtures to Run by Their Metadata (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2527&quot;&gt;#2527&lt;/a&gt;) by &lt;a href=&quot;https://github.com/NickCis&quot;&gt;@NickCis&lt;/a&gt; &lt;a class=&quot;permalink&quot; href=&quot;#select-tests-and-fixtures-to-run-by-their-metadata-2527-by-nickcis&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can now run only those tests or fixtures whose &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/test-api/test-code-structure.html#specifying-testing-metadata&quot;&gt;metadata&lt;/a&gt; contains a specific set of values. Use the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/command-line-interface.html#--test-meta-keyvaluekey2value2&quot;&gt;--test-meta&lt;/a&gt; and &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/command-line-interface.html#--fixture-meta-keyvaluekey2value2&quot;&gt;--fixture-meta&lt;/a&gt; flags to specify these values.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;testcafe chrome my-tests --test-meta &lt;span class=&quot;nv&quot;&gt;device&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;mobile,env&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;production
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;testcafe chrome my-tests --fixture-meta &lt;span class=&quot;nv&quot;&gt;subsystem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;payments,type&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;regression
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the API, test and fixture metadata is now passed to the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/programming-interface/runner.html#filter&quot;&gt;runner.filter&lt;/a&gt; method in the &lt;code&gt;testMeta&lt;/code&gt; and &lt;code&gt;fixtureMeta&lt;/code&gt; parameters. Use this metadata to build a logic that determines whether to run the current test.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;runner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;testName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fixtureName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fixturePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;testMeta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fixtureMeta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;testMeta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mobile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'true'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;fixtureMeta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'staging'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;run-dynamically-loaded-tests-2074&quot;&gt;&lt;/a&gt;âš™ Run Dynamically Loaded Tests (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2074&quot;&gt;#2074&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#run-dynamically-loaded-tests-2074&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can now run tests imported from external libraries or generated dynamically even if the &lt;code&gt;.js&lt;/code&gt; file does not contain any tests.&lt;/p&gt;

&lt;p&gt;Previously, test files had to contain the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/test-api/test-code-structure.html#fixtures&quot;&gt;fixture&lt;/a&gt; and &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/test-api/test-code-structure.html#tests&quot;&gt;test&lt;/a&gt; directives. You can now add the &lt;code&gt;--disable-test-syntax-validation&lt;/code&gt; command line flag to bypass this check.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;testcafe safari test.js --disable-test-syntax-validation
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the API, use the &lt;code&gt;disableTestSyntaxValidation&lt;/code&gt; option.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;runner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;disableTestSyntaxValidation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;bug-fixes&quot;&gt;&lt;/a&gt;Bug Fixes &lt;a class=&quot;permalink&quot; href=&quot;#bug-fixes&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Touch events are now simulated with correct touch properties (&lt;code&gt;touches&lt;/code&gt;, &lt;code&gt;targetTouches&lt;/code&gt;, &lt;code&gt;changedTouches&lt;/code&gt;) (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2856&quot;&gt;#2856&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Google Chrome now closes correctly on macOS after tests are finished (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2860&quot;&gt;#2860&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Internal attribute and node changes no longer trigger &lt;code&gt;MutationObserver&lt;/code&gt; notifications (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1769&quot;&gt;testcafe-hammerhead/#1769&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;ECONNABORTED&lt;/code&gt; error is no longer raised (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1744&quot;&gt;testcafe-hammerhead/#1744&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Websites that use &lt;code&gt;Location.ancestorOrigins&lt;/code&gt; are now proxied correctly (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1342&quot;&gt;testcafe-hammerhead/#1342&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 07 Nov 2018 00:00:00 +0300</pubDate>
        <link>https://devexpress.github.io/testcafe/blog/testcafe-v0-23-1-released.html</link>
        <guid isPermaLink="true">https://devexpress.github.io/testcafe/blog/testcafe-v0-23-1-released.html</guid>
        
        
      </item>
    
      <item>
        <title>TestCafe v0.23.0 Released</title>
        <description>&lt;h1&gt;TestCafe v0.23.0 Released&lt;/h1&gt;
&lt;p&gt;Stop a test run after the first test fail, view JavaScript errors&amp;#39; stack trace in test run reports and let TestCafe restart browsers when they stop responding.&lt;/p&gt;

&lt;!--more--&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;enhancements&quot;&gt;&lt;/a&gt;Enhancements &lt;a class=&quot;permalink&quot; href=&quot;#enhancements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;stop-test-run-after-the-first-test-fail-1323&quot;&gt;&lt;/a&gt;âš™ Stop Test Run After the First Test Fail (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1323&quot;&gt;#1323&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#stop-test-run-after-the-first-test-fail-1323&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can now configure TestCafe to stop the entire test run after the first test fail. This saves your time when you fix problems with your tests one by one.&lt;/p&gt;

&lt;p&gt;Specify the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/command-line-interface.html#--sf---stop-on-first-fail&quot;&gt;--sf&lt;/a&gt; flag to enable this feature when you run tests from the command line.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;testcafe chrome my-tests --sf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the API, use the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/programming-interface/runner.html#run&quot;&gt;stopOnFirstFail&lt;/a&gt; option.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;runner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;stopOnFirstFail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;view-the-javascript-errors-stack-traces-in-reports-2043&quot;&gt;&lt;/a&gt;âš™ View the JavaScript Errors&amp;#39; Stack Traces in Reports (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2043&quot;&gt;#2043&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#view-the-javascript-errors-stack-traces-in-reports-2043&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Now when a JavaScript error occurs on the tested webpage, the test run report includes a stack trace for this error (only if the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/command-line-interface.html#-e---skip-js-errors&quot;&gt;--skip-js-errors&lt;/a&gt; option is disabled).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/client-error-stack-report.png&quot; alt=&quot;A report that contains a stack trace for a client JS error&quot; title=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;browsers-are-automatically-restarted-when-they-stop-responding-1815&quot;&gt;&lt;/a&gt;âš™ Browsers are Automatically Restarted When They Stop Responding (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1815&quot;&gt;#1815&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#browsers-are-automatically-restarted-when-they-stop-responding-1815&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If a browser stops responding while it executes tests, TestCafe restarts the browser and reruns the current test in a new browser instance.
If the same problem occurs with this test two more times, the test run finishes and an error is thrown.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;bug-fixes&quot;&gt;&lt;/a&gt;Bug Fixes &lt;a class=&quot;permalink&quot; href=&quot;#bug-fixes&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;An error message about an unawaited call to an async function is no longer displayed when an uncaught error occurs (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2557&quot;&gt;#2557&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;A request hook is no longer added multiple times when a filter rule is used (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2650&quot;&gt;#2650&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Screenshot links in test run reports now contain paths specified by the &lt;code&gt;--screenshot-pattern&lt;/code&gt; option (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2726&quot;&gt;#2726&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Assertion chains no longer produce unhandled promise rejections (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2852&quot;&gt;#2852&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;moment&lt;/code&gt; loader now works correctly in the Jest environment (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2500&quot;&gt;#2500&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;TestCafe no longer hangs if the screenshot directory contains forbidden symbols (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/681&quot;&gt;#681&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;--ssl&lt;/code&gt; option&amp;#39;s parameters are now parsed correctly (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2924&quot;&gt;#2924&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;TestCafe now throws a meaningful error if an assertion method is missing (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1063&quot;&gt;#1063&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;TestCafe no longer hangs when it clicks a custom element (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2861&quot;&gt;#2861&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;TestCafe now performs keyboard navigation between radio buttons/groups in a way that matches the native browser behavior (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2067&quot;&gt;#2067&lt;/a&gt;, &lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2045&quot;&gt;#2045&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;fetch&lt;/code&gt; method can now be used with data URLs (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2865&quot;&gt;#2865&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;switchToIframe&lt;/code&gt; function no longer throws an error (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2956&quot;&gt;#2956&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;TestCafe can now scroll through fixed elements when the action has custom offsets (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2978&quot;&gt;#2978&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;You can now specify the current directory or its parent directories as the base path to store screenshots (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2975&quot;&gt;#2975&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Tests no longer hang up when you try to debug in headless browsers (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2846&quot;&gt;#2846&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;removeEventListener&lt;/code&gt; function now works correctly when an object is passed as its third argument (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1737&quot;&gt;testcafe-hammerhead/#1737&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Hammerhead no longer adds the &lt;code&gt;event&lt;/code&gt; property to a null &lt;code&gt;contentWindow&lt;/code&gt; in IE11 (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1684&quot;&gt;testcafe-hammerhead/#1684&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The browser no longer resets connection with the server for no reason (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1647&quot;&gt;testcafe-hammerhead/#1647&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Hammerhead now stringifies values correctly before outputting them to the console (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1750&quot;&gt;testcafe-hammerhead/#1750&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;A document fragment from the top window can now be correctly appended to an iframe (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/912&quot;&gt;testcafe-hammerhead/#912&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Lifecycle callbacks that result from the &lt;code&gt;document.registerElement&lt;/code&gt; method are no longer called twice (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/695&quot;&gt;testcafe-hammerhead/#695&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 25 Oct 2018 00:00:00 +0300</pubDate>
        <link>https://devexpress.github.io/testcafe/blog/testcafe-v0-23-0-released.html</link>
        <guid isPermaLink="true">https://devexpress.github.io/testcafe/blog/testcafe-v0-23-0-released.html</guid>
        
        
      </item>
    
      <item>
        <title>TestCafe v0.22.0 Released</title>
        <description>&lt;h1&gt;TestCafe v0.22.0 Released&lt;/h1&gt;
&lt;p&gt;Write tests in CoffeeScript, view failed selector methods in test run reports and detect server-side errors and unhandled promise rejections.&lt;/p&gt;

&lt;!--more--&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;enhancements&quot;&gt;&lt;/a&gt;Enhancements &lt;a class=&quot;permalink&quot; href=&quot;#enhancements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;coffeescript-support-1556-by-geoffreybooth&quot;&gt;&lt;/a&gt;âš™ CoffeeScript Support (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1556&quot;&gt;#1556&lt;/a&gt;) by &lt;a href=&quot;https://github.com/GeoffreyBooth&quot;&gt;@GeoffreyBooth&lt;/a&gt; &lt;a class=&quot;permalink&quot; href=&quot;#coffeescript-support-1556-by-geoffreybooth&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;TestCafe now allows you to write tests in CoffeeScript. You do not need to compile CoffeeScript manually or make any customizations - everything works out of the box.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-coffee&quot; data-lang=&quot;coffee&quot;&gt;&lt;span class=&quot;nx&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Selector&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'testcafe'&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;fixture&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'CoffeeScript Example'&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'https://devexpress.github.io/testcafe/example/'&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;nameInput&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Selector&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'#developer-name'&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Test'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;typeText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nameInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Peter'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;typeText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nameInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Paker'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;typeText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nameInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'r'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;caretPos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nameInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;eql&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Parker'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;failed-selector-method-pinpointed-in-the-report-2568&quot;&gt;&lt;/a&gt;âš™ Failed Selector Method Pinpointed in the Report (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2568&quot;&gt;#2568&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#failed-selector-method-pinpointed-in-the-report-2568&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Now the test run report can identify which selector&amp;#39;s method does not match any DOM element.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/failed-selector-report.png&quot; alt=&quot;Failed Selector Report&quot; title=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;fail-on-uncaught-server-errors-2546&quot;&gt;&lt;/a&gt;âš™ Fail on Uncaught Server Errors (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2546&quot;&gt;#2546&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#fail-on-uncaught-server-errors-2546&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Previously, TestCafe ignored uncaught errors and unhandled promise rejections that occurred on the server. Whenever an error or a promise rejection happened, test execution continued.&lt;/p&gt;

&lt;p&gt;Starting from v0.22.0, tests fail if a server error or promise rejection is unhandled. To return to the previous behavior, we have introduced the &lt;code&gt;skipUncaughtErrors&lt;/code&gt; option. Use the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/command-line-interface.html#-u---skip-uncaught-errors&quot;&gt;--skip-uncaught-errors&lt;/a&gt; flag in the command line or the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/programming-interface/runner.html#run&quot;&gt;skipUncaughtErrors&lt;/a&gt; option in the API.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;testcafe chrome tests/fixture.js --skipUncaughtErrors
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;runner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;skipUncaughtErrors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;use-glob-patterns-in-runnersrc-980&quot;&gt;&lt;/a&gt;âš™ Use Glob Patterns in &lt;code&gt;runner.src&lt;/code&gt; (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/980&quot;&gt;#980&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#use-glob-patterns-in-runnersrc-980&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can now use &lt;a href=&quot;https://github.com/isaacs/node-glob#glob-primer&quot;&gt;glob patterns&lt;/a&gt; in the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/programming-interface/runner.html#src&quot;&gt;runner.src&lt;/a&gt; method to specify a set of test files.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;runner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/home/user/tests/**/*.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'!/home/user/tests/foo.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;bug-fixes&quot;&gt;&lt;/a&gt;Bug Fixes &lt;a class=&quot;permalink&quot; href=&quot;#bug-fixes&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;RequestLogger&lt;/code&gt; no longer fails when it tries to stringify a null request body (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2718&quot;&gt;#2718&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Temporary directories are now correctly removed when the test run is finished (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2735&quot;&gt;#2735&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;TestCafe no longer throws &lt;code&gt;ECONNRESET&lt;/code&gt; when run against a Webpack project (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2711&quot;&gt;#2711&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;An error is no longer thrown when TestCafe tests Sencha ExtJS applications in IE11 (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2639&quot;&gt;#2639&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Firefox no longer waits for page elements to appear without necessity (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2080&quot;&gt;#2080&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;${BROWSER}&lt;/code&gt; in the screenshot pattern now correctly resolves to the browser name (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2742&quot;&gt;#2742&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;toString&lt;/code&gt; function now returns a native string for overridden descriptor ancestors (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1713&quot;&gt;testcafe-hammerhead/#1713&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;iframe&lt;/code&gt; flag is no longer added when a form with &lt;code&gt;target=&amp;quot;_parent&amp;quot;&lt;/code&gt; is submitted (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1680&quot;&gt;testcafe-hammerhead/#1680&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Hammerhead no longer sends request headers in lower case (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1380&quot;&gt;testcafe-hammerhead/#1380&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The overridden &lt;code&gt;createHTMLDocument&lt;/code&gt; method has the right context now (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1722&quot;&gt;testcafe-hammerhead/#1722&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Tests no longer lose connection (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1647&quot;&gt;testcafe-hammerhead/#1647&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The case when both the &lt;code&gt;X-Frame-Options&lt;/code&gt; header and a CSP with &lt;code&gt;frame-ancestors&lt;/code&gt; are set is now handled correctly (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1666&quot;&gt;testcafe-hammerhead/#1666&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The mechanism that resolves URLs on the client now works correctly (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1701&quot;&gt;testcafe-hammerhead/#1701&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LiveNodeListWrapper&lt;/code&gt; now imitates the native behavior correctly (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1376&quot;&gt;testcafe-hammerhead/#1376&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 03 Sep 2018 00:00:00 +0300</pubDate>
        <link>https://devexpress.github.io/testcafe/blog/testcafe-v0-22-0-released.html</link>
        <guid isPermaLink="true">https://devexpress.github.io/testcafe/blog/testcafe-v0-22-0-released.html</guid>
        
        
      </item>
    
      <item>
        <title>TestCafe v0.21.0 Released</title>
        <description>&lt;h1&gt;TestCafe v0.21.0 Released&lt;/h1&gt;
&lt;p&gt;Test web pages served over HTTPS, construct screenshot paths with patterns and use more info in custom reporters.&lt;/p&gt;

&lt;!--more--&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;enhancements&quot;&gt;&lt;/a&gt;Enhancements &lt;a class=&quot;permalink&quot; href=&quot;#enhancements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;test-web-pages-served-over-https-1985&quot;&gt;&lt;/a&gt;âš™ Test Web Pages Served Over HTTPS (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/1985&quot;&gt;#1985&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#test-web-pages-served-over-https-1985&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Some browser features (like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API&quot;&gt;Service Workers&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Geolocation_API&quot;&gt;Geolocation API&lt;/a&gt;, &lt;a href=&quot;https://developer.apple.com/documentation/apple_pay_on_the_web/applepaysession&quot;&gt;ApplePaySession&lt;/a&gt;, or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto&quot;&gt;SubtleCrypto&lt;/a&gt;) require a secure origin. This means that the website should use the HTTPS protocol.&lt;/p&gt;

&lt;p&gt;Starting with v0.21.0, TestCafe can serve proxied web pages over HTTPS. This allows you to test pages that require a secure origin.&lt;/p&gt;

&lt;p&gt;To enable HTTPS when you use TestCafe through the command line, specify the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/command-line-interface.html#--ssl-options&quot;&gt;--ssl&lt;/a&gt; flag followed by the &lt;a href=&quot;https://nodejs.org/api/https.html#https_https_createserver_options_requestlistener&quot;&gt;HTTPS server options&lt;/a&gt;. The most commonly used options are described in the &lt;a href=&quot;https://nodejs.org/api/tls.html#tls_tls_createsecurecontext_options&quot;&gt;TLS topic&lt;/a&gt; in the Node.js documentation.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;testcafe --ssl &lt;span class=&quot;nv&quot;&gt;pfx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;path/to/file.pfx;rejectUnauthorized&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;;...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you use a programming API, pass the HTTPS server options to the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/programming-interface/createtestcafe.html&quot;&gt;createTestCafe&lt;/a&gt; method.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;s1&quot;&gt;'use strict'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createTestCafe&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'testcafe'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;selfSignedSertificate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'openssl-self-signed-certificate'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;runner&lt;/span&gt;                  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sslOptions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;nx&quot;&gt;selfSignedSertificate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;cert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;selfSignedSertificate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cert&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;createTestCafe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'localhost'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1337&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1338&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sslOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;testcafe&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;runner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;testcafe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createRunner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;runner&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'test.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;// Browsers restrict self-signed certificate usage unless you&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// explicitly set a flag specific to each browser.&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// For Chrome, this is '--allow-insecure-localhost'.&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;browsers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'chrome --allow-insecure-localhost'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/common-concepts/connect-to-the-testcafe-server-over-https.html&quot;&gt;Connect to TestCafe Server over HTTPS&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;construct-screenshot-paths-with-patterns-2152&quot;&gt;&lt;/a&gt;âš™ Construct Screenshot Paths with Patterns (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2152&quot;&gt;#2152&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#construct-screenshot-paths-with-patterns-2152&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can now use patterns to construct paths to screenshots. TestCafe provides a number of placeholders you can include in the path, for example, &lt;code&gt;${DATE}&lt;/code&gt;, &lt;code&gt;${TIME}&lt;/code&gt;, &lt;code&gt;${USERAGENT}&lt;/code&gt;, etc. For a complete list, refer to the command line &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/command-line-interface.html#-p---screenshot-path-pattern&quot;&gt;--screenshot-path-pattern flag description&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You specify a screenshot path pattern when you run tests. Each time TestCafe takes a screenshot, it substitutes the placeholders with actual values and saves the screenshot to the resulting path.&lt;/p&gt;

&lt;p&gt;The following example shows how to specify a screenshot path pattern through the command line:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;testcafe all test.js -s screenshots -p &lt;span class=&quot;s1&quot;&gt;'${DATE}_${TIME}/test-${TEST_INDEX}/${USERAGENT}/${FILE_INDEX}.png'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you use a programming API, pass the screenshot path pattern to the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/using-testcafe/programming-interface/runner.html#screenshots&quot;&gt;runner.screenshots method&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;runner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;screenshots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'reports/screenshots/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'${TEST_INDEX}/${OS}/${BROWSER}-v${BROWSER_VERSION}/${FILE_INDEX}.png'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; id=&quot;add-info-about-screenshots-and-quarantine-attempts-to-custom-reports-2216&quot;&gt;&lt;/a&gt;âš™ Add Info About Screenshots and Quarantine Attempts to Custom Reports (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2216&quot;&gt;#2216&lt;/a&gt;) &lt;a class=&quot;permalink&quot; href=&quot;#add-info-about-screenshots-and-quarantine-attempts-to-custom-reports-2216&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Custom reporters can now access screenshots&amp;#39; data and the history of quarantine attempts (if the test run in the quarantine mode).&lt;/p&gt;

&lt;p&gt;The following information about screenshots is now available:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the path to the screenshot file,&lt;/li&gt;
&lt;li&gt;the path to the thumbnail image,&lt;/li&gt;
&lt;li&gt;the user agent of the browser in which the screenshot was taken,&lt;/li&gt;
&lt;li&gt;the quarantine attempt number (if the screenshot was taken in the quarantine mode),&lt;/li&gt;
&lt;li&gt;whether the screenshot was taken because the test failed.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If the test was run in the quarantine mode, you can also determine which attempts failed and passed.&lt;/p&gt;

&lt;p&gt;Refer to the &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/extending-testcafe/reporter-plugin/reporter-methods.html#reporttestdone&quot;&gt;reportTestDone method description&lt;/a&gt; for details on how to access this information.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; id=&quot;bug-fixes&quot;&gt;&lt;/a&gt;Bug Fixes &lt;a class=&quot;permalink&quot; href=&quot;#bug-fixes&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;HTML5 drag events are no longer simulated if &lt;code&gt;event.preventDefault&lt;/code&gt; is called for the &lt;code&gt;mousedown&lt;/code&gt; event (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2529&quot;&gt;#2529&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;File upload no longer causes an exception when there are several file inputs on the page (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2642&quot;&gt;#2642&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;File upload now works with inputs that have the &lt;code&gt;required&lt;/code&gt; attribute (&lt;a href=&quot;https://github.com/DevExpress/testcafe/issues/2509&quot;&gt;#2509&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;load&lt;/code&gt; event listener is no longer triggered when added to an image (&lt;a href=&quot;https://github.com/DevExpress/testcafe-hammerhead/issues/1688&quot;&gt;testcafe-hammerhead/#1688&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 02 Aug 2018 00:00:00 +0300</pubDate>
        <link>https://devexpress.github.io/testcafe/blog/testcafe-v0-21-0-released.html</link>
        <guid isPermaLink="true">https://devexpress.github.io/testcafe/blog/testcafe-v0-21-0-released.html</guid>
        
        
      </item>
    
  </channel>
</rss>
